{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"source/assets/image/k8s-in-action/1.png","path":"assets/image/k8s-in-action/1.png","modified":0,"renderable":0},{"_id":"source/assets/image/k8s-in-action/11.png","path":"assets/image/k8s-in-action/11.png","modified":0,"renderable":0},{"_id":"source/assets/image/k8s-in-action/10.png","path":"assets/image/k8s-in-action/10.png","modified":0,"renderable":0},{"_id":"source/assets/image/k8s-in-action/13.png","path":"assets/image/k8s-in-action/13.png","modified":0,"renderable":0},{"_id":"source/assets/image/k8s-in-action/12.png","path":"assets/image/k8s-in-action/12.png","modified":0,"renderable":0},{"_id":"source/assets/image/k8s-in-action/14.png","path":"assets/image/k8s-in-action/14.png","modified":0,"renderable":0},{"_id":"source/assets/image/k8s-in-action/15.png","path":"assets/image/k8s-in-action/15.png","modified":0,"renderable":0},{"_id":"source/assets/image/k8s-in-action/2.png","path":"assets/image/k8s-in-action/2.png","modified":0,"renderable":0},{"_id":"source/assets/image/k8s-in-action/16.png","path":"assets/image/k8s-in-action/16.png","modified":0,"renderable":0},{"_id":"source/assets/image/k8s-in-action/3.png","path":"assets/image/k8s-in-action/3.png","modified":0,"renderable":0},{"_id":"source/assets/image/k8s-in-action/6.png","path":"assets/image/k8s-in-action/6.png","modified":0,"renderable":0},{"_id":"source/assets/image/k8s-in-action/5.png","path":"assets/image/k8s-in-action/5.png","modified":0,"renderable":0},{"_id":"source/assets/image/k8s-in-action/7.png","path":"assets/image/k8s-in-action/7.png","modified":0,"renderable":0},{"_id":"source/assets/image/k8s-in-action/8.png","path":"assets/image/k8s-in-action/8.png","modified":0,"renderable":0},{"_id":"source/assets/image/k8s-in-action/9.png","path":"assets/image/k8s-in-action/9.png","modified":0,"renderable":0},{"_id":"source/assets/image/k8s-in-action/4.png","path":"assets/image/k8s-in-action/4.png","modified":0,"renderable":0},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","path":"css/noscript.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","path":"js/comments.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/config.js","path":"js/config.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","path":"js/schedule.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/sidebar.js","path":"js/sidebar.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/addtoany.js","path":"js/third-party/addtoany.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/matomo.js","path":"js/third-party/analytics/matomo.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/wavedrom.js","path":"js/third-party/tags/wavedrom.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":0,"renderable":1},{"_id":"source/assets/image/k8s-in-action/17.png","path":"assets/image/k8s-in-action/17.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/_posts/k8s-in-action/understanding-container.md","hash":"da932916b1c13e9ba6f4e5c93bd6742f064b08c1","modified":1722767595270},{"_id":"source/tags/index.md","hash":"6bee8391346976b483aae48c9c4a1576be3e5db9","modified":1721658870259},{"_id":"source/categories/index.md","hash":"616dfb277e8f5943c38816dbc456ea99e87036ad","modified":1721658861761},{"_id":"source/assets/image/k8s-in-action/11.png","hash":"6eb469dbfa2aa1078dee8ed98e7e5c158e18f473","modified":1722148866154},{"_id":"source/assets/image/k8s-in-action/1.png","hash":"a6d6fe75fa55b2922c6eaba4da9bcd66e26af69c","modified":1721830222474},{"_id":"source/_posts/k8s-in-action/understanding-k8s.md","hash":"053cff15ad97b1285dd2d7de44e670f9140bd116","modified":1722147672254},{"_id":"source/assets/image/k8s-in-action/13.png","hash":"90cfa8851278e53df1d0099e27b47b46b6d60b05","modified":1722752949253},{"_id":"source/assets/image/k8s-in-action/12.png","hash":"47747728600539b3d31ca6f44a79dd2ab8d36240","modified":1722752911291},{"_id":"source/assets/image/k8s-in-action/14.png","hash":"f92c920da295442aa425a68abd540bf4ae7ea849","modified":1722753034299},{"_id":"source/assets/image/k8s-in-action/2.png","hash":"1b4187c240c8f54f4fe5bb4fa12dad28db1ba249","modified":1721831887898},{"_id":"source/assets/image/k8s-in-action/15.png","hash":"27d7a6278cb42951e9226d5ab2c773016d9d8741","modified":1722755147135},{"_id":"source/assets/image/k8s-in-action/16.png","hash":"ceb2b35df5f74d7664a1af4780c1577fb1385f11","modified":1722767360323},{"_id":"source/assets/image/k8s-in-action/3.png","hash":"5d17f43cbbbe53329ed3b5c09e003fde71f3cefa","modified":1721834587153},{"_id":"source/assets/image/k8s-in-action/6.png","hash":"e36b07c986720f151a9379d6e30980b79ecb24c1","modified":1722078559400},{"_id":"source/assets/image/k8s-in-action/8.png","hash":"4ed1d84f5e72c1736ba34a3da574aa8a724b146b","modified":1722144451627},{"_id":"source/assets/image/k8s-in-action/4.png","hash":"2d6e17161a35720c993a1081ce729af63aac3a93","modified":1722075899596},{"_id":"source/assets/image/k8s-in-action/5.png","hash":"c8737ab929aa42130eada6defe44d71a9a3ca9bb","modified":1722076074979},{"_id":"source/assets/image/k8s-in-action/9.png","hash":"453092b06db821500f724ecffc3525f178748fb6","modified":1722147049924},{"_id":"source/assets/image/k8s-in-action/10.png","hash":"85cd3f2f553c785df9a84bd829e4f89f1c6b8f3c","modified":1722147590541},{"_id":"source/assets/image/k8s-in-action/7.png","hash":"1b084059d5519e74391161ec3e0579127fbe7a61","modified":1722080953591},{"_id":"node_modules/hexo-theme-next/_vendors.yml","hash":"82dc85404bb716360c136059f8b4ead67f46549c","modified":1721584137078},{"_id":"node_modules/hexo-theme-next/package.json","hash":"655accf88e80dfdd525042da1d65114b47dcb52a","modified":1721584137088},{"_id":"node_modules/hexo-theme-next/README.md","hash":"20d3aab17b7d9b7ab537800a5ee932af8438664a","modified":1721584137078},{"_id":"node_modules/hexo-theme-next/_config.yml","hash":"8cfc97916efdc7cb9acfbe3a653e943a97e54de0","modified":1721584137078},{"_id":"node_modules/hexo-theme-next/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":1721584137078},{"_id":"node_modules/hexo-theme-next/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":1721584137079},{"_id":"node_modules/hexo-theme-next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1721584137079},{"_id":"node_modules/hexo-theme-next/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":1721584137079},{"_id":"node_modules/hexo-theme-next/languages/ar.yml","hash":"7d0f39e8684284a04bb9808521c87fecda8bd131","modified":1721584137079},{"_id":"node_modules/hexo-theme-next/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":1721584137079},{"_id":"node_modules/hexo-theme-next/languages/de.yml","hash":"79b37df731c29665dee6cd7c90d278e1edfb6e24","modified":1721584137079},{"_id":"node_modules/hexo-theme-next/languages/eo.yml","hash":"e34bb33ae827bf2f0727088599a73bc64bdad1b0","modified":1721584137080},{"_id":"node_modules/hexo-theme-next/languages/en.yml","hash":"ba0fd79a2b1d8db01a034180556061745965ff05","modified":1721584137080},{"_id":"node_modules/hexo-theme-next/languages/bn.yml","hash":"564bed75da6e05b11dce6164508f97a15e2fb6c2","modified":1721584137079},{"_id":"node_modules/hexo-theme-next/languages/fa.yml","hash":"f3ffc444599f4ac92d62e9ed00a1490ebc277d70","modified":1721584137080},{"_id":"node_modules/hexo-theme-next/languages/es.yml","hash":"dffc63ef42e1266b88e0acf08994fd17a9908d53","modified":1721584137080},{"_id":"node_modules/hexo-theme-next/languages/id.yml","hash":"929df147f4f17d638b07de5fe52ca13e2549ab1c","modified":1721584137080},{"_id":"node_modules/hexo-theme-next/languages/fr.yml","hash":"8ac44e58f71a38b7697a2f7f98a6971ed818cb5b","modified":1721584137080},{"_id":"node_modules/hexo-theme-next/languages/nl.yml","hash":"3cb3687696635ec71b4ca40c5fc43b56acc8843e","modified":1721584137080},{"_id":"node_modules/hexo-theme-next/languages/ko.yml","hash":"d345a303310c8a5f4836c3683f3580f861ebd1b4","modified":1721584137080},{"_id":"node_modules/hexo-theme-next/languages/it.yml","hash":"16d716ecfd748def2f6486ef5a82d0ab7ceb4890","modified":1721584137080},{"_id":"node_modules/hexo-theme-next/languages/pt.yml","hash":"70de366e10ea584ba039d40d6b35ac97f93454ad","modified":1721584137080},{"_id":"node_modules/hexo-theme-next/languages/pt-BR.yml","hash":"76b8576ce228d540a16b1f0af5af2cce20923194","modified":1721584137080},{"_id":"node_modules/hexo-theme-next/languages/si.yml","hash":"2d712eedf3f60d04d36c3108cf5a12e2a52e875c","modified":1721584137081},{"_id":"node_modules/hexo-theme-next/languages/ja.yml","hash":"543222bfc516aab6c33e8534f807972ecb8943a9","modified":1721584137080},{"_id":"node_modules/hexo-theme-next/languages/ru.yml","hash":"c6d8de0ff7d8148d09993257cfd3b7aca755696c","modified":1721584137081},{"_id":"node_modules/hexo-theme-next/languages/th.yml","hash":"6829e998b39f8f143e20b276bb1f62d95a29de58","modified":1721584137081},{"_id":"node_modules/hexo-theme-next/languages/tk.yml","hash":"511726054873f6f8d7ce0d2e803f6731de0ddbe7","modified":1721584137081},{"_id":"node_modules/hexo-theme-next/languages/tr.yml","hash":"a57e4ed089b893a95f5e1ecff17ce625165f4d46","modified":1721584137081},{"_id":"node_modules/hexo-theme-next/languages/uk.yml","hash":"ff537047b4b4c3ca9a7b64fa7f428a9942751eeb","modified":1721584137081},{"_id":"node_modules/hexo-theme-next/languages/vi.yml","hash":"7ebcba5e1128784195e4681dffc9d34c4e873fec","modified":1721584137081},{"_id":"node_modules/hexo-theme-next/languages/zh-CN.yml","hash":"741d7efe0262c9cdc2c648014b55599665d90f6b","modified":1721584137081},{"_id":"node_modules/hexo-theme-next/layout/_layout.njk","hash":"fc0a45112f2dcfc2642404e8934ea32a793c3bd7","modified":1721584137082},{"_id":"node_modules/hexo-theme-next/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":1721584137087},{"_id":"node_modules/hexo-theme-next/languages/zh-HK.yml","hash":"88ea50eeb9097ab4a87a44981a102d8594feb064","modified":1721584137081},{"_id":"node_modules/hexo-theme-next/languages/zh-TW.yml","hash":"4695c87d6b81b3a23d16ad6513d9eaa925f8d8ad","modified":1721584137081},{"_id":"node_modules/hexo-theme-next/layout/category.njk","hash":"c68b7343d0f8145010f93351908cc36ef6212ec1","modified":1721584137087},{"_id":"node_modules/hexo-theme-next/layout/post.njk","hash":"0bfce9f133f501a9a4837257e3b862b3bbca15be","modified":1721584137087},{"_id":"node_modules/hexo-theme-next/layout/tag.njk","hash":"9e16ba20c28a7f2c6bc75aa427f48122301a30aa","modified":1721584137088},{"_id":"node_modules/hexo-theme-next/layout/page.njk","hash":"af6d7570621be760536c216a56d74e40a1cceae2","modified":1721584137087},{"_id":"node_modules/hexo-theme-next/layout/index.njk","hash":"dd63e488ae8cc144335a5958acedf6a16edd7a92","modified":1721584137087},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"12a6631617695504d5cf2a94b57d87bd331bef6f","modified":1721584137079},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CONTRIBUTING.md","hash":"a089f7a8368ab0b7d7b9b7ec0ac3767a453435df","modified":1721584137079},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/README.md","hash":"287f57dbdfd23341800a0ff310f3474272b9dcc8","modified":1721584137079},{"_id":"node_modules/hexo-theme-next/layout/_macro/sidebar.njk","hash":"547c62ab14d9e05d2d9116db9048a677fbe1fb6d","modified":1721584137082},{"_id":"node_modules/hexo-theme-next/layout/_macro/post.njk","hash":"952449064fcb6a5cefc281b585f9149809f857f1","modified":1721584137082},{"_id":"node_modules/hexo-theme-next/layout/_macro/post-collapse.njk","hash":"313637fe3569f98fd926e8cd0fcc75d098eb6e6e","modified":1721584137082},{"_id":"node_modules/hexo-theme-next/layout/_third-party/fancybox.njk","hash":"844559f46e2ff1c8be234d5763703106e2072a7b","modified":1721584137086},{"_id":"node_modules/hexo-theme-next/layout/_third-party/index.njk","hash":"dfd7cdd6ba89f8c3deabc27726c7a350cadafd11","modified":1721584137086},{"_id":"node_modules/hexo-theme-next/layout/_third-party/addtoany.njk","hash":"ef64c6bfb8540cd874701236b9be47db2496e98e","modified":1721584137084},{"_id":"node_modules/hexo-theme-next/layout/_third-party/pace.njk","hash":"d7ad5714079f7f65446f880baf14722435ca9061","modified":1721584137086},{"_id":"node_modules/hexo-theme-next/layout/_third-party/quicklink.njk","hash":"0efed71ed530447718c4ea5bbd5fc8695b0b0d5f","modified":1721584137086},{"_id":"node_modules/hexo-theme-next/layout/_scripts/index.njk","hash":"7ed1fa981bf4765af092d7b178acbdeeb95d5b20","modified":1721584137084},{"_id":"node_modules/hexo-theme-next/layout/_scripts/vendors.njk","hash":"be80b9fe415a9a09d74c28e230995fd292dfc123","modified":1721584137084},{"_id":"node_modules/hexo-theme-next/layout/_partials/comments.njk","hash":"d0c470b0f6690aa217e9ada848c5e2e73fb27c6f","modified":1721584137082},{"_id":"node_modules/hexo-theme-next/layout/_partials/footer.njk","hash":"fbf8232cacf0df87e88e74860be66c9f86018302","modified":1721584137082},{"_id":"node_modules/hexo-theme-next/layout/_partials/languages.njk","hash":"e43f22198cccb5f6e306b1ce0d28d12a4fb891f8","modified":1721584137083},{"_id":"node_modules/hexo-theme-next/scripts/events/index.js","hash":"bd9ea82376cd87df611ea3ae077875c7c595a3df","modified":1721584137088},{"_id":"node_modules/hexo-theme-next/scripts/filters/locals.js","hash":"9eb5310664759931287dd28ea39165dfb67f12ed","modified":1721584137090},{"_id":"node_modules/hexo-theme-next/scripts/filters/minify.js","hash":"2063aaa1db448ebcf7b0fdbbc54d3991a368bbd3","modified":1721584137090},{"_id":"node_modules/hexo-theme-next/layout/_partials/pagination.njk","hash":"bc719473ed5948ab6859449d60b8d36cfc1542b4","modified":1721584137083},{"_id":"node_modules/hexo-theme-next/layout/_partials/widgets.njk","hash":"d83fb59f02c5e6630a7770401a05c02f6f07358b","modified":1721584137084},{"_id":"node_modules/hexo-theme-next/scripts/filters/post.js","hash":"fdc8a0af90035e89c3fcb754a0eb189b8951a2bc","modified":1721584137090},{"_id":"node_modules/hexo-theme-next/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":1721584137091},{"_id":"node_modules/hexo-theme-next/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":1721584137091},{"_id":"node_modules/hexo-theme-next/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":1721584137091},{"_id":"node_modules/hexo-theme-next/scripts/tags/group-pictures.js","hash":"8d205b7ffdaa9a89bb8f75410507ee1bab230f55","modified":1721584137091},{"_id":"node_modules/hexo-theme-next/scripts/tags/index.js","hash":"1f6aba7820f1fb58b61969485148db21846e1aa9","modified":1721584137091},{"_id":"node_modules/hexo-theme-next/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":1721584137091},{"_id":"node_modules/hexo-theme-next/scripts/tags/link-grid.js","hash":"18a483c2d5afd701f6080ffdddf2d1321370336c","modified":1721584137091},{"_id":"node_modules/hexo-theme-next/scripts/tags/mermaid.js","hash":"4fb01ca650fa8b256b8d48f50dc1b18350bd3d6d","modified":1721584137092},{"_id":"node_modules/hexo-theme-next/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":1721584137092},{"_id":"node_modules/hexo-theme-next/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":1721584137092},{"_id":"node_modules/hexo-theme-next/scripts/tags/tabs.js","hash":"0eabe51da40b4b13e16419c8fe02452d9a4fef73","modified":1721584137092},{"_id":"node_modules/hexo-theme-next/scripts/tags/wavedrom.js","hash":"b44dfeeb58b41945d469141787f3dbce4b117d08","modified":1721584137093},{"_id":"node_modules/hexo-theme-next/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":1721584137093},{"_id":"node_modules/hexo-theme-next/scripts/helpers/engine.js","hash":"049b1a0b66563e39f68710bb576a8c7342ae749c","modified":1721584137090},{"_id":"node_modules/hexo-theme-next/scripts/helpers/font.js","hash":"3394185a7f0393c16ce52c8028f90da3e9239c55","modified":1721584137090},{"_id":"node_modules/hexo-theme-next/scripts/helpers/navigation.js","hash":"78107021101553c3d23e89290f7530b60cf4aa86","modified":1721584137090},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-config.js","hash":"ce6bd4054653a4066b19869819a17b568eeee915","modified":1721584137090},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-vendors.js","hash":"af3946a595f997eb43d9af87428e4898c9acbc82","modified":1721584137091},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-url.js","hash":"6281d47c1de98eb38f3aa0f6df29bbb19d412173","modified":1721584137091},{"_id":"node_modules/hexo-theme-next/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":1721584137090},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-paginator.js","hash":"e86c764b546e4fbb87970cabc4135a56f9ef9fe1","modified":1721584137090},{"_id":"node_modules/hexo-theme-next/source/css/_colors.styl","hash":"3c6798c10cc220d83481cb3f3782e78558cee789","modified":1721584137093},{"_id":"node_modules/hexo-theme-next/docs/ru/README.md","hash":"0be2d7a75ffc3d9a963cf89a13bd1b50579f8304","modified":1721584137079},{"_id":"node_modules/hexo-theme-next/source/css/_mixins.styl","hash":"bbeae369eaba9a2565fc359a5b79184d21bdd167","modified":1721584137105},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","hash":"921a58577f411cf4eb5cfd66db0a241f8f88578c","modified":1721584137107},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1721584137107},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1721584137108},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1721584137108},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1721584137108},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","hash":"dadc81256afb127b77eac6763d5ee0ec9c77f0a3","modified":1721584137107},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1721584137108},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1721584137108},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1721584137108},{"_id":"node_modules/hexo-theme-next/source/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1721584137108},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1721584137108},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1721584137108},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","hash":"8e587c086e3cf8687108fbb3241fe1534c3df463","modified":1721584137108},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","hash":"8e2d589585f5270ee90285d3e65b69923c7629d8","modified":1721584137108},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1721584137108},{"_id":"node_modules/hexo-theme-next/source/js/sidebar.js","hash":"b3289010a0cb52c525b1395db72bd463424f2f48","modified":1721584137109},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","hash":"adc751f9b63b7a6b4d381506d35a1b3ff4de891f","modified":1721584137108},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.njk","hash":"6215309aee028dcb734452beec448c5afb6c63fc","modified":1721584137085},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/cloudflare.njk","hash":"a5b8297c2c383124dd6a56e256ecc0c0dcf489be","modified":1721584137085},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/index.njk","hash":"f900306497b133e8b098bd9f4b96b93d1d96c185","modified":1721584137085},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/google-analytics.njk","hash":"d89066ff53879693f023e540d59c86137172c529","modified":1721584137085},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/growingio.njk","hash":"8afaa772c390bd9d53a5cff9645ac3168334eb98","modified":1721584137085},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/matomo.njk","hash":"4e89648a8ec8194c5823064cbca39c938a799006","modified":1721584137085},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/plausible.njk","hash":"ef9f2bb7110507f1c4336800af9157d5fa9765bd","modified":1721584137085},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/umami.njk","hash":"3343750682fbd8535e50f8129be3003ad26015b4","modified":1721584137085},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/microsoft-clarity.njk","hash":"9dc00fcb0a05899f048eace9f9160b78956655d5","modified":1721584137085},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","hash":"f92420649b150703469bba41cbd5c72768beed88","modified":1721584137111},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/chatra.njk","hash":"d7263fca16d0278ccf1f6aa1c6df6902a6344a09","modified":1721584137085},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/changyan.njk","hash":"d1c950f8fbdf85e7a3eae5463767a89e858e8220","modified":1721584137085},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqus.njk","hash":"9375b19a89b7fa9474e558d085af5448d4c5c50c","modified":1721584137085},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/tidio.njk","hash":"02aab857c27fc103216029be991688b12a73a525","modified":1721584137085},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/gitalk.njk","hash":"b63b7e2ede0d3e66e732fa1a06bda9b19e1e85d4","modified":1721584137086},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqusjs.njk","hash":"0749cb6902baecdfd01f779a2a2513f6d2f6a823","modified":1721584137085},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/isso.njk","hash":"64cc3bdaf644fd32c0d0a247f29f5b6904da9af3","modified":1721584137086},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/livere.njk","hash":"3b13b09fba84ec6000886890a6710736a2b8fafe","modified":1721584137086},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/utterances.njk","hash":"5a94032bc3512a10ad4328fc19ec07b819a1d687","modified":1721584137086},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/mathjax.njk","hash":"3677017fd4572b158311f5f5d870590ab25184e0","modified":1721584137086},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/algolia-search.njk","hash":"24ed76e0c72a25ac152820c750a05826a706b6f4","modified":1721584137086},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/katex.njk","hash":"1ebf658690468ea197bdd0416eb7cfa4bd0b083a","modified":1721584137086},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/mermaid.njk","hash":"099e031f52fb8e47b3af5b2684737efc9e643ee7","modified":1721584137087},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/index.njk","hash":"abf37fc55aa86702118e8fdf5bf2d389dd589aa0","modified":1721584137086},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/localsearch.njk","hash":"e45ea3542cdc9ed7ec8447b5e6f35df4c5e82758","modified":1721584137086},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/pdf.njk","hash":"2c81984cc4f5123103460442f6e046f5b6c97127","modified":1721584137087},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":1721584137087},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/firestore.njk","hash":"d32ebe94560fa95824478ebbff531bffc47b194d","modified":1721584137087},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"a4bc501da0f22f7e420f0ca47e83988ce90b1368","modified":1721584137087},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/wavedrom.njk","hash":"02202bf563fb5eedde2ccad4d6c5b9109d30a703","modified":1721584137087},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/index.njk","hash":"650de421a8ce4cf685428ffbe0087ff84cbd1356","modified":1721584137082},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/lean-analytics.njk","hash":"2446e748cdc102c78492216319ac02148db7daf6","modified":1721584137087},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head-unique.njk","hash":"8da52a144060db1a0a088ccb2e6cc8376d1fce70","modified":1721584137082},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head.njk","hash":"5388b157bba4a40b9312f4a45c6678974ccf0837","modified":1721584137082},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/brand.njk","hash":"dd9c4c03e99dfde0dfb8edefcb2c933f2f560efc","modified":1721584137082},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu.njk","hash":"ee6fc2f111572d3eeab0a2fecbb2d6b3e37ab26b","modified":1721584137083},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/sub-menu.njk","hash":"06480d8ec5f0b87eafd47f082f07968d7282dd5c","modified":1721584137083},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu-item.njk","hash":"41a8b0cc16f60fa085cb719d07216d86b6bc4bf8","modified":1721584137083},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":1721584137083},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":1721584137083},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/schedule.njk","hash":"0f4bc8e257da60f77c0c1738607b2bde55810684","modified":1721584137083},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/breadcrumb.njk","hash":"89825e75cc45e9709fa6ba89883669eedaff6f46","modified":1721584137083},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":1721584137083},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-copyright.njk","hash":"bfff923526d6800218f08dba6ce0bbf5c17755fd","modified":1721584137083},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-followme.njk","hash":"c1e33b4889f75acc490af3c8bde0ec56c518ff41","modified":1721584137083},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-meta.njk","hash":"9fa47e4fb342811da590ee4adc91cf81118c0a39","modified":1721584137083},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-related.njk","hash":"e0986db00a0201dd3c60570f964829c84ba5bc68","modified":1721584137084},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-reward.njk","hash":"e8b8a7c41e9ec612d0c0c73419529d55d1c16256","modified":1721584137084},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-share.njk","hash":"16696990e4ce65fc8db18c4635082a5d5d06ff07","modified":1721584137084},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/config.js","hash":"9ec51eb61f7fee612ffc5252f489003a0fa301fc","modified":1721584137088},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/highlight.js","hash":"8300553bf2a1c4bfaec76f2da56465016e9d8058","modified":1721584137088},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/injects.js","hash":"d987709267a1bc6e5014411e9983d7c49c102c16","modified":1721584137088},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/index.njk","hash":"8f6f256ab3b351ffc80f1f3f1d9834e9a7cfac31","modified":1721584137084},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/navigation.js","hash":"dd3562686d95a50375e6fd32e717ccb0d99c1e3d","modified":1721584137088},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/utils.js","hash":"5942feb3f31ed3480bf50b0f5a4a305b5bdca3d6","modified":1721584137089},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/vendors.js","hash":"e2b4a9d6b08155735ec336eedc506763d5671821","modified":1721584137089},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/common.js","hash":"19a402a225c31edffc50f202a14e0d582d3db23e","modified":1721584137089},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/localsearch.njk","hash":"661f7acae43f0be694266323320f977d84119abe","modified":1721584137084},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/algolia-search.njk","hash":"efb2b6f19df02ba5ae623a1f274fff52aed21e6f","modified":1721584137084},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":1721584137089},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/changyan.js","hash":"5798cfc8f63665031dd3e01debed051628cec319","modified":1721584137089},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqus.js","hash":"7f71d6b271ba65ff333d5682e7575711d368c0d2","modified":1721584137089},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqusjs.js","hash":"a600a98e7436edeb31e291abca359885567df3c9","modified":1721584137089},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":1721584137089},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/gitalk.js","hash":"7bb7dafdd7f6bca8464b54e17e552ce7f1714195","modified":1721584137089},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":1721584137090},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/livere.js","hash":"5a07d8bb52bc1d51a624ca8db54be144566c306b","modified":1721584137089},{"_id":"node_modules/hexo-theme-next/layout/_partials/sidebar/site-overview.njk","hash":"bc5708e38b6070dff0cab6bf9480971017ce4dda","modified":1721584137084},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":1721584137107},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"20d5c6aa136bbb55e03906d98ee90ad3fbaa80a7","modified":1721584137107},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Mist.styl","hash":"2c800eaab6c613e5d091be2111aaa786641aa0c2","modified":1721584137107},{"_id":"node_modules/hexo-theme-next/source/css/_variables/base.styl","hash":"8b4100f316e9924f2410802615107130588d721e","modified":1721584137107},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Muse.styl","hash":"879b49f693af0c04c285b2dd0c9cccaf77347b7c","modified":1721584137107},{"_id":"node_modules/hexo-theme-next/source/js/third-party/addtoany.js","hash":"5276c8f78ee562a8965216dc67d762e59cb4a9f2","modified":1721584137109},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","hash":"819f382c561fe5ec23c67cc5fabd63dd1cc22dc1","modified":1721584137110},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1721584137110},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1721584137110},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/index.styl","hash":"2298e521253b3bf376a2412271bc2a7d305051f3","modified":1721584137094},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"7664491542046df9a3887cf40a06e00c0b4086a9","modified":1721584137093},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":1721584137104},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"d0a7c99095f490b0d2ed6b1be43d435960798cec","modified":1721584137104},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/reading-progress.styl","hash":"90a86045a33c1bae49fc2f6fa1e1b53170c7f77b","modified":1721584137098},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":1721584137104},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1721584137104},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/pagination.styl","hash":"f4228c759db4a650c8d38745c2edd1dc83c45687","modified":1721584137104},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1721584137104},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":1721584137104},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/toggles.styl","hash":"37be10c413438060fc76ed31ae74d4300c38c5eb","modified":1721584137105},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_layout.styl","hash":"fa4fd8f76464e214fb7318f325b13c2b62f4b478","modified":1721584137105},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_posts-expand.styl","hash":"485d23ccb42c0d0c8ead7ea8930dd3e06d79a285","modified":1721584137106},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":1721584137106},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"9dfe853c901bdc52fc950bacdf15484dbb9bf140","modified":1721584137105},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/index.styl","hash":"8e34df131830d4fa3725e4590a672ba1cf1903e5","modified":1721584137103},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"6569a6640f79d247a8235b3914772c0e2f99ead2","modified":1721584137106},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"dafc6d23c80d6fe3e55a7711e94210d2479b629a","modified":1721584137105},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/mobile.styl","hash":"1dbf2c339adcd27026c3a2ded32ee91ce08cea26","modified":1721584137103},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sidebar.styl","hash":"c29a827e82d2820ed8977c92994da73721200fac","modified":1721584137106},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1721584137106},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_header.styl","hash":"3fbfab591f280e2e7f3b0265901c93bc4bd137ed","modified":1721584137106},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"f23c53e32d140091b819be2603d1afbbb5d66933","modified":1721584137106},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"e31f6adbb22a451f07e4661cff9a2f12e4e99a36","modified":1721584137106},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"d537c748914ad395319f9cfc91cd5ba96db57e8c","modified":1721584137106},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_header.styl","hash":"dc03835e42d82eaf2633cf3b627990ad3e1f5967","modified":1721584137106},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"7ba406f560e3a6646b9254bb670fda696889e1e6","modified":1721584137107},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":1721584137107},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"a92c4eb16bdb7806079467eb022ccf193bb0f794","modified":1721584137106},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1721584137106},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1721584137109},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","hash":"def07bcc7c17d8a0caad177fb1dd2f3a5e5b3536","modified":1721584137109},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":1721584137107},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1721584137109},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1721584137109},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1721584137109},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","hash":"da361917d65e5dca8362f8cdeb6c8cc0e8316cec","modified":1721584137109},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1721584137109},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1721584137110},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1721584137110},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1721584137109},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1721584137109},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1721584137109},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1721584137110},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1721584137110},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1721584137110},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","hash":"835cbf54c49ef1327f47df70ff2636ad36b6f57d","modified":1721584137110},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","hash":"6bf821310342c5b87a631873e7650a475a0765f1","modified":1721584137110},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","hash":"6e0682bb42170d61b13b786295f45f9c785f8b73","modified":1721584137110},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1721584137110},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","hash":"1e826dea3f684c0515f362dc1352447a1f0eae71","modified":1721584137109},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":1721584137095},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"51a97a33879289904cb523ddc2d88b5b0c60fa72","modified":1721584137095},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/wavedrom.js","hash":"40dcd10df6edf124088c329346e0cc0bdac74ef1","modified":1721584137111},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":1721584137096},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1721584137096},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/disqusjs.styl","hash":"877a537d5b95beb048142e4fdee6f17e6ef9c7bb","modified":1721584137098},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitalk.styl","hash":"8f094c4ac17e2ab45569b12d157747f9c7333c12","modified":1721584137099},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":1721584137096},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/index.styl","hash":"54d12e2c5d9982f7b9e5b23be5133954a8514e9d","modified":1721584137099},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/utterances.styl","hash":"56d90ae0559caa55b75f3c300ff2711f9ed65fc4","modified":1721584137100},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/math.styl","hash":"9d995eb4871a6c273d9d51558676a1fdabf69e72","modified":1721584137099},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/index.styl","hash":"098d4bd034e986fcf7e443eac4fc2193935461b7","modified":1721584137097},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/search.styl","hash":"e72799ce3f9b79753e365b2f8c8ef6c310668d4a","modified":1721584137099},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-body.styl","hash":"56d5b7ff73f466c9ae54f7204ae899281295d749","modified":1721584137097},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-followme.styl","hash":"1ecfd64507954810b07a9d21fb5305b5378feda0","modified":1721584137097},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-footer.styl","hash":"11497388f124bfbb4001495a67d3629a9f618405","modified":1721584137097},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":1721584137097},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"809bab3414b1eb1ae44444eb821126868f764414","modified":1721584137097},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-header.styl","hash":"1191f1bfa5c43e54be8e5b3cc0d802984e161747","modified":1721584137097},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","hash":"fdb7b7cef1a147d897e7f7cd8903b58368ec2062","modified":1721584137110},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":1721584137098},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"ebfba158a0a4af3d1dabcacbc58986664de52140","modified":1721584137098},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/fold.styl","hash":"42a0b65491ad85438596b3fe0b7f23973e4cef34","modified":1721584137104},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/index.styl","hash":"138f78147bc6bd6005f329ada34dc79b7625542d","modified":1721584137104},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"d6418fd2bbfba7b73ddf11ec62db9637fdf5d8af","modified":1721584137104},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/footer/index.styl","hash":"4e967702cf4c637132346bc74ec8854426f1a68c","modified":1721584137100},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":1721584137104},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"04cf4a69537fc14d3b8904f965d283356853847f","modified":1721584137098},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/index.styl","hash":"22cd37bd5df9972d5074710896aba4424ad5161c","modified":1721584137105},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f634f94828620e88c3f5a8db56f7944f6ba232b0","modified":1721584137104},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":1721584137105},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"48d35dba575a7c9e8845b16652e76b7d4a4646de","modified":1721584137105},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b6654a1d7cf82577d8263faffee8af3ad4a5c0e8","modified":1721584137105},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/tabs.styl","hash":"33dd6ad015dde65fd46f34961655442e8e82b52e","modified":1721584137105},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/wavedrom.styl","hash":"af113411ad9cca7674177be36af8dd399680834d","modified":1721584137105},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/note.styl","hash":"98d4c20aff0f0fcfe1824017fb06ab21ef0d218e","modified":1721584137105},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/bookmark.styl","hash":"e74f4bb47a101b014ee2a1783c87f3b87323f9a0","modified":1721584137101},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7f8a7345e6537a62cd9e9a94c8f7065b541d9b04","modified":1721584137105},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/github-banner.styl","hash":"38c64c2d04e46848382bfa246a0e9c508294767b","modified":1721584137101},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/index.styl","hash":"6e0d0796ef7fbbb62ffdfb448753a850de82c74f","modified":1721584137102},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/index.styl","hash":"7c203ec68c0f54429caf35803dbac85b18540278","modified":1721584137103},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/menu.styl","hash":"a3dd3edea9c01b66b28a8367185269b9dcc3bdee","modified":1721584137102},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-nav.styl","hash":"bf3ad8b4268f763a1e26377681644887694bc009","modified":1721584137102},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/related-posts.styl","hash":"b05908f04ef95f2d91e6eba89b12411c378d050f","modified":1721584137103},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"0847400d8579b0a2dd1bf662c78954c10adf2680","modified":1721584137103},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"5b38ac4a0f1ade0e681aff0e3366c481d9cf3dcd","modified":1721584137103},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-meta.styl","hash":"a851e9d5aefcd027c95eeb323860b6da70f202d1","modified":1721584137102},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"c6a27beb3f741211a14576026f3b4cfc44cc6407","modified":1721584137103},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"24752d145c6fb8f5344dca9c7b9640839c02e009","modified":1721584137103},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"741566d6ac5f852b5c8dee6a8996b65e48e7c97f","modified":1721584137103},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/site-state.styl","hash":"26dd0adfcb1db6df29c6090c8d7e9b5a43583fb0","modified":1721584137103},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"46eece42510c2c89bb9209afb0262ad76a4b0b36","modified":1721584137103},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"c2e354a565c8c1b32bd0ceacc972b17982758b67","modified":1721584137103},{"_id":"public/tags/index.html","hash":"68877e1dde070c09907a709055f5d02a9fef9456","modified":1722767729667},{"_id":"public/categories/index.html","hash":"933e456423355f5f8aae842378d31b2646ab0822","modified":1722767729667},{"_id":"public/2024/07/27/k8s-in-action/understanding-container/index.html","hash":"9a7d3997dd1bf0928e76662eaff7426cfd6579cd","modified":1722767729667},{"_id":"public/2024/07/23/k8s-in-action/understanding-k8s/index.html","hash":"0340ff562f26325ed15ef125be09e7bf5c271ad1","modified":1722767729667},{"_id":"public/archives/index.html","hash":"ef1459473aefe270c0848c2ff66cab639ae2b97f","modified":1722767729667},{"_id":"public/archives/2024/07/index.html","hash":"86ea4d590e5eeea7b3bd2e733094a08df088018b","modified":1722767729667},{"_id":"public/archives/2024/index.html","hash":"24d98fc2d44084631c1301367d6042de2875032c","modified":1722767729667},{"_id":"public/index.html","hash":"328820e148c26587e9c2965c63476edfc06af706","modified":1722767729667},{"_id":"public/categories/k8s实战笔记/index.html","hash":"51f67da5b16acb183ba8e0c49b6f294c0e5462c1","modified":1722767729667},{"_id":"public/tags/容器/index.html","hash":"af8226278911554b084bc4e4f39fda81993e542d","modified":1722767729667},{"_id":"public/tags/k8s/index.html","hash":"e223b8fec71b1a418ce2f720e6a566c300fe793e","modified":1722767729667},{"_id":"public/assets/image/k8s-in-action/15.png","hash":"27d7a6278cb42951e9226d5ab2c773016d9d8741","modified":1722767729667},{"_id":"public/assets/image/k8s-in-action/14.png","hash":"f92c920da295442aa425a68abd540bf4ae7ea849","modified":1722767729667},{"_id":"public/assets/image/k8s-in-action/2.png","hash":"1b4187c240c8f54f4fe5bb4fa12dad28db1ba249","modified":1722767729667},{"_id":"public/assets/image/k8s-in-action/13.png","hash":"90cfa8851278e53df1d0099e27b47b46b6d60b05","modified":1722767729667},{"_id":"public/assets/image/k8s-in-action/16.png","hash":"ceb2b35df5f74d7664a1af4780c1577fb1385f11","modified":1722767729667},{"_id":"public/assets/image/k8s-in-action/3.png","hash":"5d17f43cbbbe53329ed3b5c09e003fde71f3cefa","modified":1722767729667},{"_id":"public/assets/image/k8s-in-action/6.png","hash":"e36b07c986720f151a9379d6e30980b79ecb24c1","modified":1722767729667},{"_id":"public/assets/image/k8s-in-action/8.png","hash":"4ed1d84f5e72c1736ba34a3da574aa8a724b146b","modified":1722767729667},{"_id":"public/assets/image/k8s-in-action/12.png","hash":"47747728600539b3d31ca6f44a79dd2ab8d36240","modified":1722767729667},{"_id":"public/assets/image/k8s-in-action/5.png","hash":"c8737ab929aa42130eada6defe44d71a9a3ca9bb","modified":1722767729667},{"_id":"public/assets/image/k8s-in-action/9.png","hash":"453092b06db821500f724ecffc3525f178748fb6","modified":1722767729667},{"_id":"public/assets/image/k8s-in-action/4.png","hash":"2d6e17161a35720c993a1081ce729af63aac3a93","modified":1722767729667},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1722767729667},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1722767729667},{"_id":"public/assets/image/k8s-in-action/11.png","hash":"6eb469dbfa2aa1078dee8ed98e7e5c158e18f473","modified":1722767729667},{"_id":"public/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1722767729667},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1722767729667},{"_id":"public/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1722767729667},{"_id":"public/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1722767729667},{"_id":"public/assets/image/k8s-in-action/1.png","hash":"a6d6fe75fa55b2922c6eaba4da9bcd66e26af69c","modified":1722767729667},{"_id":"public/css/main.css","hash":"f1bebc878903ec95af5170d227145ee57da9ba6b","modified":1722767729667},{"_id":"public/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1722767729667},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1722767729667},{"_id":"public/js/motion.js","hash":"8e587c086e3cf8687108fbb3241fe1534c3df463","modified":1722767729667},{"_id":"public/css/noscript.css","hash":"4cd5301e478e0e0d4b176740ec314087ec5cb707","modified":1722767729667},{"_id":"public/js/next-boot.js","hash":"8e2d589585f5270ee90285d3e65b69923c7629d8","modified":1722767729667},{"_id":"public/js/pjax.js","hash":"adc751f9b63b7a6b4d381506d35a1b3ff4de891f","modified":1722767729667},{"_id":"public/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1722767729667},{"_id":"public/js/utils.js","hash":"f92420649b150703469bba41cbd5c72768beed88","modified":1722767729667},{"_id":"public/js/sidebar.js","hash":"b3289010a0cb52c525b1395db72bd463424f2f48","modified":1722767729667},{"_id":"public/js/third-party/fancybox.js","hash":"819f382c561fe5ec23c67cc5fabd63dd1cc22dc1","modified":1722767729667},{"_id":"public/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1722767729667},{"_id":"public/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1722767729667},{"_id":"public/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1722767729667},{"_id":"public/js/third-party/analytics/google-analytics.js","hash":"def07bcc7c17d8a0caad177fb1dd2f3a5e5b3536","modified":1722767729667},{"_id":"public/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1722767729667},{"_id":"public/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1722767729667},{"_id":"public/js/third-party/addtoany.js","hash":"5276c8f78ee562a8965216dc67d762e59cb4a9f2","modified":1722767729667},{"_id":"public/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1722767729667},{"_id":"public/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1722767729667},{"_id":"public/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1722767729667},{"_id":"public/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1722767729667},{"_id":"public/js/third-party/comments/disqus.js","hash":"da361917d65e5dca8362f8cdeb6c8cc0e8316cec","modified":1722767729667},{"_id":"public/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1722767729667},{"_id":"public/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1722767729667},{"_id":"public/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1722767729667},{"_id":"public/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1722767729667},{"_id":"public/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1722767729667},{"_id":"public/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1722767729667},{"_id":"public/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1722767729667},{"_id":"public/js/third-party/comments/disqusjs.js","hash":"1e826dea3f684c0515f362dc1352447a1f0eae71","modified":1722767729667},{"_id":"public/js/third-party/search/algolia-search.js","hash":"fdb7b7cef1a147d897e7f7cd8903b58368ec2062","modified":1722767729667},{"_id":"public/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1722767729667},{"_id":"public/js/third-party/tags/wavedrom.js","hash":"40dcd10df6edf124088c329346e0cc0bdac74ef1","modified":1722767729667},{"_id":"public/js/third-party/tags/mermaid.js","hash":"6bf821310342c5b87a631873e7650a475a0765f1","modified":1722767729667},{"_id":"public/js/third-party/statistics/firestore.js","hash":"6e0682bb42170d61b13b786295f45f9c785f8b73","modified":1722767729667},{"_id":"public/js/third-party/statistics/lean-analytics.js","hash":"835cbf54c49ef1327f47df70ff2636ad36b6f57d","modified":1722767729667},{"_id":"public/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1722767729667},{"_id":"public/assets/image/k8s-in-action/7.png","hash":"1b084059d5519e74391161ec3e0579127fbe7a61","modified":1722767729667},{"_id":"public/assets/image/k8s-in-action/10.png","hash":"85cd3f2f553c785df9a84bd829e4f89f1c6b8f3c","modified":1722767729667},{"_id":"source/_posts/k8s-in-action/explore-container-hands-on.md","hash":"95ef22b06da75e9730d75d2502b15d6c57432ed1","modified":1722770277806}],"Category":[{"name":"k8s实战笔记","_id":"clzfffbug0004d8s6apqw8rqn"}],"Data":[],"Page":[{"title":"标签","date":"2024-07-22T14:24:45.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2024-07-22 22:24:45\ntype: tags\n---\n","updated":"2024-07-22T14:34:30.259Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clzfffbub0000d8s6aj1t44ai","content":"","excerpt":"","more":""},{"title":"分类","date":"2024-07-22T14:24:40.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2024-07-22 22:24:40\ntype: categories\n---\n","updated":"2024-07-22T14:34:21.761Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clzfffbuf0002d8s6b7hncjfy","content":"","excerpt":"","more":""}],"Post":[{"title":"容器简介","date":"2024-07-27T15:51:35.000Z","_content":"\n当系统只有少量应用的时候，为每一个应用分配一个虚拟机并把应用运行在该虚拟机的系统上是没问题的。但是当使用微服务的时候，应用数量不断上升，这个时候再使用刚才的策略将消耗特别多的硬件资源，花费也是高昂的。<br>\n此外，每个虚拟机通常都需要单独配置和管理，这意味着运行更多的虚拟机也会导致对人员配置提出更高要求，并需要更好的、往往也更复杂的自动化系统。由于向微服务架构的转变，系统由数百个已部署的应用程序实例组成，因此需要虚拟机的替代品。容器就是这样的替代品。<br>\n\n## 对比容器和虚拟机\n与使用虚拟机来隔离各个微服务（或一般软件进程）的环境不同，现在大多数开发和运营团队更喜欢使用容器。它们允许您在同一台主机计算机上运行多个服务，同时保持它们彼此隔离。与虚拟机相似，但开销要小得多。<br>\n与每个都运行一个带有多个系统进程的独立操作系统的虚拟机不同，在容器中运行的进程在现有的主机操作系统内运行。由于只有一个操作系统，因此不存在重复的系统进程。尽管所有的应用程序进程都在同一个操作系统中运行，但它们的环境是隔离的，尽管隔离程度不如在单独的虚拟机中运行它们时好。对于容器中的进程而言，这种隔离使其看起来就像计算机上不存在其他进程一样。<br>\n\n### 容器和虚拟机的开销对比\n与虚拟机相比，容器要轻得多，因为它们不需要单独的资源池或任何额外的操作系统级进程。每个虚拟机通常都运行自己的一套系统进程，这些进程除了用户应用程序自己的进程所消耗的资源外，还需要额外的计算资源，但容器只是在现有主机操作系统中运行的一个隔离进程，它只消耗应用程序所消耗的资源。\n\n下图显示了两台裸机计算机（bare metal computer），一台运行两个虚拟机，另一台则运行容器。后者有空间容纳额外的容器，因为它只运行一个操作系统，而第一台则运行三个——一个主机操作系统和两个guest操作系统。\n\n![8](../../assets/image/k8s-in-action/8.png)\n由于虚拟机的资源开销，你通常会将多个应用程序分组到每个虚拟机中。你无法承担为每个应用程序分配一个完整的虚拟机的费用。但是容器不会引入任何开销，这意味着你可以承担为每个应用程序创建一个单独的容器的费用。事实上，你永远不应该在同一个容器中运行多个应用程序，因为这会使管理容器中的进程变得更加困难。此外，包括Kubernetes本身在内的所有处理容器的现有软件，都是在容器中只有一个应用程序的前提下设计的。\n\n### 容器和虚拟机的启动时间对比\n除了较低的运行时开销外，容器还能更快地启动应用程序，因为只需要启动应用程序进程本身。与启动新虚拟机时需要首先启动额外的系统进程不同，容器不需要这样做。\n\n### 容器和虚拟机的隔离对比（isolation）\n就资源使用而言，容器显然更胜一筹，但也存在一个缺点。当在虚拟机中运行应用程序时，每个虚拟机都会运行自己的操作系统和内核。在这些虚拟机之下是超管理器（以及可能的一个额外的操作系统），它将物理硬件资源分割成较小的虚拟资源集，供每个虚拟机中的操作系统使用。如下图所示，在这些虚拟机中运行的应用程序会对虚拟机中的客户操作系统内核发出`系统调用`，然后内核在虚拟CPU上执行的机器指令会通过超管理器转发给主机的物理CPU。\n![9](../../assets/image/k8s-in-action/9.png)\n另一方面，所有容器都在宿主操作系统中运行的单一内核上进行系统调用。这个单一内核是宿主CPU上唯一执行指令的实体。CPU不需要像处理虚拟机那样处理任何形式的虚拟化。\n![10](../../assets/image/k8s-in-action/10.png)\n在第一种情况下，所有三个应用程序都使用相同的内核，并且完全没有隔离。在第二种情况下，应用程序A和B在同一个虚拟机中运行，因此共享内核，而应用程序C则完全与其他两个隔离，因为它使用自己的内核。它只与前两个共享硬件。\n\n第三种情况显示了三个应用程序在容器中运行。尽管它们都使用相同的内核，但它们彼此隔离，并且完全不知道其他应用程序的存在。隔离是由内核本身提供的。每个应用程序只看到物理硬件的一部分，并且将自己视为操作系统中唯一运行的进程，尽管它们都在同一个操作系统中运行。\n\n### 理解容器隔离的安全性影响\n使用虚拟机而不是容器的主要优势是它们提供的完全隔离性，因为每个虚拟机都有自己的Linux内核，而所有容器都使用同一个内核。这明显会带来安全风险。如果内核中存在漏洞，一个容器中的应用程序可能会利用它来读取其他容器中应用程序的内存。如果应用程序在不同的虚拟机上运行，因此只共享硬件，那么此类攻击的可能性要低得多。当然，只有在不同的物理机器上运行应用程序才能实现完全隔离。\n\n此外，容器共享内存空间，而每个虚拟机都使用自己的内存块。因此，如果不限制容器可以使用的内存量，这可能会导致其他容器内存不足或将其数据交换到磁盘上。\n\n### 理解容器和虚拟机的工作原理\n虚拟机是通过CPU中的虚拟化支持和宿主机上的虚拟化软件来启用的，容器是由Linux内核本身启用的。\n\n## 介绍Docker容器平台\n虽然容器技术已经存在很长时间了，但它们只是随着Docker的兴起才变得广为人知。Docker是第一个使容器能够轻松地在不同计算机之间移植的容器系统。它简化了将应用程序及其所有库和其他依赖项（甚至整个操作系统文件系统）打包成一个简单、可移植的包的过程，该包可用于在任何运行Docker的计算机上部署应用程序。\n\n### 介绍容器、镜像和注册中心（container、image、registry）\nDocker是一个用于打包、分发和运行应用程序的平台。如前所述，它允许您将应用程序及其整个环境一起打包。这可能只是应用程序所需的一些动态链接库，或者是随操作系统一起提供的所有文件。Docker允许您通过公共存储库将此包分发到任何启用了Docker的计算机上。\n![11](../../assets/image/k8s-in-action/11.png)\n- **Image**：容器镜像是您将**应用程序**及其**环境**打包成的东西，类似于一个压缩文件或归档文件。它包含了应用程序将使用的整个**文件系统**以及额外的**元数据**，比如当镜像被执行时运行的可执行文件的路径、应用程序监听的端口，以及关于镜像的其他信息。\n- **Registry**：注册中心是容器镜像的存储库，它使不同的人和计算机之间能够交换镜像。在构建镜像后，您可以在同一台计算机上运行它，或者将镜像推送到注册中心（上传），然后再将其拉取（下载）到另一台计算机。某些注册中心是公开的，允许任何人从中拉取镜像，而其他注册中心是私有的，仅对拥有必要身份验证凭据的个人、组织或计算机开放。\n- **Container**：容器是根据容器镜像实例化的。正在运行的容器是主机操作系统中运行的一个正常进程，但其环境与主机环境和其他进程的环境相隔离。容器的文件系统源自容器镜像，但也可以将其他文件系统挂载到容器中。容器通常受到资源限制，意味着它只能访问和使用为其分配的CPU和内存等资源量。\n\n### 构建、分发和运行容器镜像\n下面的几个图展示了容器镜像构建、分发、和运行的流程，同时也可以看出他们之前的关系。\n![12](../../assets/image/k8s-in-action/12.png)\n![13](../../assets/image/k8s-in-action/13.png)\n![14](../../assets/image/k8s-in-action/14.png)\n\n### 理解应用程序所看到的环境\n当在容器中运行应用程序时，它会看到打包到容器镜像中的文件系统内容，以及挂载到容器中的任何额外文件系统。无论应用程序是在笔记本电脑上运行还是在功能完备的生产服务器上运行，它看到的文件都是相同的，即使生产服务器使用的是完全不同的Linux发行版也是如此。应用程序通常无法访问主机操作系统中的文件，因此服务器的已安装依赖与开发计算机完全不同也没关系。\n\n例如，如果将您的应用程序与整个Red Hat Enterprise Linux（RHEL）操作系统的文件一起打包，然后运行它，应用程序会认为自己是在RHEL内部运行，无论您是在基于Fedora的计算机上还是基于Debian的计算机上运行它。主机上安装的Linux发行版无关紧要。唯一可能重要的是内核版本和它加载的内核模块。\n\n这与通过创建新的虚拟机、在其中安装操作系统和应用程序，然后分发整个虚拟机镜像以便其他人可以在不同的主机上运行它的方式来创建VM镜像类似。Docker达到了相同的效果，但它不是使用虚拟机来实现应用程序的隔离，而是使用Linux容器技术来达到（几乎）相同的隔离级别。\n\n### 理解镜像层（Image Layers）\n虚拟机镜像包含了安装在虚拟机中的操作系统所需的整个文件系统的庞大数据块，而容器镜像则由通常小得多的层组成。这些层可以在多个镜像之间共享和重用。这意味着，如果主机里包含相同层的另一个镜像已经下载了这些相同层，那么其他的镜像只需要下载其他未下载过的层。\n\n层（Layers）使得镜像分发非常高效，同时也有助于减少镜像的存储占用。Docker 只存储每个层一次。如下图所示，两个由包含相同层的镜像创建的容器使用相同的文件。这意味着，尽管你可能有多个镜像，但它们共享某些层，这些层在磁盘上只被存储一次，而不是每个镜像都存储一份。这种机制不仅减少了磁盘空间的占用，还加快了镜像的加载速度，因为系统只需要加载那些在特定容器中实际被使用的层。\n![15](../../assets/image/k8s-in-action/15.png)\n图示表明容器A和B共享一个镜像层，这意味着应用程序A和B会读取一些相同的文件。此外，它们还与容器C共享底层。但是，如果这三个容器都能访问相同的文件，那么它们是如何完全彼此隔离的呢？应用程序A对存储在共享层中的文件所做的更改对应用程序B不可见吗？它们是不可见的。原因如下：\n\n文件系统通过写时复制（Copy-on-Write，简称CoW）机制实现隔离。容器的文件系统由容器镜像中的只读层和一个堆叠在顶部的额外读写层组成。当在容器A中运行的应用程序更改只读层中的一个文件时，整个文件会被复制到容器的读写层中，并在那里更改文件内容。由于每个容器都有自己的可写层，因此对共享文件的更改在任何其他容器中都是不可见的。\n\n当你删除一个文件时，它只是在读写层中被标记为已删除，但它仍然存在于一个或多个底层中。因此，删除文件永远不会减小镜像的大小。\n\n### 了解容器映像的可移植性限制\n理论上，基于Docker的容器镜像可以在任何运行Docker的Linux计算机上运行，但存在一个小小的注意事项，因为容器没有自己的内核。如果容器化应用程序需要特定版本的内核，那么它可能无法在每台计算机上运行。如果计算机运行的是不同版本的Linux内核或未加载所需的内核模块，则应用程序无法在该计算机上运行。\n\n![16](../../assets/image/k8s-in-action/16.png)\n容器B需要特定的内核模块才能正常运行。这个模块在第一台计算机的内核中已加载，但在第二台计算机中未加载。您可以在第二台计算机上运行容器镜像，但当它尝试使用缺失的模块时会出错。\n\n而且，这不仅仅是关于内核及其模块的问题。还应该明确的是，为特定硬件架构构建的容器化应用程序只能在具有相同架构的计算机上运行。不能将一个为x86 CPU架构编译的应用程序放入容器中，并期望它在基于ARM的计算机上运行仅仅因为那里运行着Docker。为此，需要一个虚拟机来模拟x86架构。\n\n<br>\n<br>\n\n\n","source":"_posts/k8s-in-action/understanding-container.md","raw":"---\ntitle: 容器简介\ndate: 2024-07-27 23:51:35\ntags: \n - 容器\n - k8s\ncategories: k8s实战笔记\n---\n\n当系统只有少量应用的时候，为每一个应用分配一个虚拟机并把应用运行在该虚拟机的系统上是没问题的。但是当使用微服务的时候，应用数量不断上升，这个时候再使用刚才的策略将消耗特别多的硬件资源，花费也是高昂的。<br>\n此外，每个虚拟机通常都需要单独配置和管理，这意味着运行更多的虚拟机也会导致对人员配置提出更高要求，并需要更好的、往往也更复杂的自动化系统。由于向微服务架构的转变，系统由数百个已部署的应用程序实例组成，因此需要虚拟机的替代品。容器就是这样的替代品。<br>\n\n## 对比容器和虚拟机\n与使用虚拟机来隔离各个微服务（或一般软件进程）的环境不同，现在大多数开发和运营团队更喜欢使用容器。它们允许您在同一台主机计算机上运行多个服务，同时保持它们彼此隔离。与虚拟机相似，但开销要小得多。<br>\n与每个都运行一个带有多个系统进程的独立操作系统的虚拟机不同，在容器中运行的进程在现有的主机操作系统内运行。由于只有一个操作系统，因此不存在重复的系统进程。尽管所有的应用程序进程都在同一个操作系统中运行，但它们的环境是隔离的，尽管隔离程度不如在单独的虚拟机中运行它们时好。对于容器中的进程而言，这种隔离使其看起来就像计算机上不存在其他进程一样。<br>\n\n### 容器和虚拟机的开销对比\n与虚拟机相比，容器要轻得多，因为它们不需要单独的资源池或任何额外的操作系统级进程。每个虚拟机通常都运行自己的一套系统进程，这些进程除了用户应用程序自己的进程所消耗的资源外，还需要额外的计算资源，但容器只是在现有主机操作系统中运行的一个隔离进程，它只消耗应用程序所消耗的资源。\n\n下图显示了两台裸机计算机（bare metal computer），一台运行两个虚拟机，另一台则运行容器。后者有空间容纳额外的容器，因为它只运行一个操作系统，而第一台则运行三个——一个主机操作系统和两个guest操作系统。\n\n![8](../../assets/image/k8s-in-action/8.png)\n由于虚拟机的资源开销，你通常会将多个应用程序分组到每个虚拟机中。你无法承担为每个应用程序分配一个完整的虚拟机的费用。但是容器不会引入任何开销，这意味着你可以承担为每个应用程序创建一个单独的容器的费用。事实上，你永远不应该在同一个容器中运行多个应用程序，因为这会使管理容器中的进程变得更加困难。此外，包括Kubernetes本身在内的所有处理容器的现有软件，都是在容器中只有一个应用程序的前提下设计的。\n\n### 容器和虚拟机的启动时间对比\n除了较低的运行时开销外，容器还能更快地启动应用程序，因为只需要启动应用程序进程本身。与启动新虚拟机时需要首先启动额外的系统进程不同，容器不需要这样做。\n\n### 容器和虚拟机的隔离对比（isolation）\n就资源使用而言，容器显然更胜一筹，但也存在一个缺点。当在虚拟机中运行应用程序时，每个虚拟机都会运行自己的操作系统和内核。在这些虚拟机之下是超管理器（以及可能的一个额外的操作系统），它将物理硬件资源分割成较小的虚拟资源集，供每个虚拟机中的操作系统使用。如下图所示，在这些虚拟机中运行的应用程序会对虚拟机中的客户操作系统内核发出`系统调用`，然后内核在虚拟CPU上执行的机器指令会通过超管理器转发给主机的物理CPU。\n![9](../../assets/image/k8s-in-action/9.png)\n另一方面，所有容器都在宿主操作系统中运行的单一内核上进行系统调用。这个单一内核是宿主CPU上唯一执行指令的实体。CPU不需要像处理虚拟机那样处理任何形式的虚拟化。\n![10](../../assets/image/k8s-in-action/10.png)\n在第一种情况下，所有三个应用程序都使用相同的内核，并且完全没有隔离。在第二种情况下，应用程序A和B在同一个虚拟机中运行，因此共享内核，而应用程序C则完全与其他两个隔离，因为它使用自己的内核。它只与前两个共享硬件。\n\n第三种情况显示了三个应用程序在容器中运行。尽管它们都使用相同的内核，但它们彼此隔离，并且完全不知道其他应用程序的存在。隔离是由内核本身提供的。每个应用程序只看到物理硬件的一部分，并且将自己视为操作系统中唯一运行的进程，尽管它们都在同一个操作系统中运行。\n\n### 理解容器隔离的安全性影响\n使用虚拟机而不是容器的主要优势是它们提供的完全隔离性，因为每个虚拟机都有自己的Linux内核，而所有容器都使用同一个内核。这明显会带来安全风险。如果内核中存在漏洞，一个容器中的应用程序可能会利用它来读取其他容器中应用程序的内存。如果应用程序在不同的虚拟机上运行，因此只共享硬件，那么此类攻击的可能性要低得多。当然，只有在不同的物理机器上运行应用程序才能实现完全隔离。\n\n此外，容器共享内存空间，而每个虚拟机都使用自己的内存块。因此，如果不限制容器可以使用的内存量，这可能会导致其他容器内存不足或将其数据交换到磁盘上。\n\n### 理解容器和虚拟机的工作原理\n虚拟机是通过CPU中的虚拟化支持和宿主机上的虚拟化软件来启用的，容器是由Linux内核本身启用的。\n\n## 介绍Docker容器平台\n虽然容器技术已经存在很长时间了，但它们只是随着Docker的兴起才变得广为人知。Docker是第一个使容器能够轻松地在不同计算机之间移植的容器系统。它简化了将应用程序及其所有库和其他依赖项（甚至整个操作系统文件系统）打包成一个简单、可移植的包的过程，该包可用于在任何运行Docker的计算机上部署应用程序。\n\n### 介绍容器、镜像和注册中心（container、image、registry）\nDocker是一个用于打包、分发和运行应用程序的平台。如前所述，它允许您将应用程序及其整个环境一起打包。这可能只是应用程序所需的一些动态链接库，或者是随操作系统一起提供的所有文件。Docker允许您通过公共存储库将此包分发到任何启用了Docker的计算机上。\n![11](../../assets/image/k8s-in-action/11.png)\n- **Image**：容器镜像是您将**应用程序**及其**环境**打包成的东西，类似于一个压缩文件或归档文件。它包含了应用程序将使用的整个**文件系统**以及额外的**元数据**，比如当镜像被执行时运行的可执行文件的路径、应用程序监听的端口，以及关于镜像的其他信息。\n- **Registry**：注册中心是容器镜像的存储库，它使不同的人和计算机之间能够交换镜像。在构建镜像后，您可以在同一台计算机上运行它，或者将镜像推送到注册中心（上传），然后再将其拉取（下载）到另一台计算机。某些注册中心是公开的，允许任何人从中拉取镜像，而其他注册中心是私有的，仅对拥有必要身份验证凭据的个人、组织或计算机开放。\n- **Container**：容器是根据容器镜像实例化的。正在运行的容器是主机操作系统中运行的一个正常进程，但其环境与主机环境和其他进程的环境相隔离。容器的文件系统源自容器镜像，但也可以将其他文件系统挂载到容器中。容器通常受到资源限制，意味着它只能访问和使用为其分配的CPU和内存等资源量。\n\n### 构建、分发和运行容器镜像\n下面的几个图展示了容器镜像构建、分发、和运行的流程，同时也可以看出他们之前的关系。\n![12](../../assets/image/k8s-in-action/12.png)\n![13](../../assets/image/k8s-in-action/13.png)\n![14](../../assets/image/k8s-in-action/14.png)\n\n### 理解应用程序所看到的环境\n当在容器中运行应用程序时，它会看到打包到容器镜像中的文件系统内容，以及挂载到容器中的任何额外文件系统。无论应用程序是在笔记本电脑上运行还是在功能完备的生产服务器上运行，它看到的文件都是相同的，即使生产服务器使用的是完全不同的Linux发行版也是如此。应用程序通常无法访问主机操作系统中的文件，因此服务器的已安装依赖与开发计算机完全不同也没关系。\n\n例如，如果将您的应用程序与整个Red Hat Enterprise Linux（RHEL）操作系统的文件一起打包，然后运行它，应用程序会认为自己是在RHEL内部运行，无论您是在基于Fedora的计算机上还是基于Debian的计算机上运行它。主机上安装的Linux发行版无关紧要。唯一可能重要的是内核版本和它加载的内核模块。\n\n这与通过创建新的虚拟机、在其中安装操作系统和应用程序，然后分发整个虚拟机镜像以便其他人可以在不同的主机上运行它的方式来创建VM镜像类似。Docker达到了相同的效果，但它不是使用虚拟机来实现应用程序的隔离，而是使用Linux容器技术来达到（几乎）相同的隔离级别。\n\n### 理解镜像层（Image Layers）\n虚拟机镜像包含了安装在虚拟机中的操作系统所需的整个文件系统的庞大数据块，而容器镜像则由通常小得多的层组成。这些层可以在多个镜像之间共享和重用。这意味着，如果主机里包含相同层的另一个镜像已经下载了这些相同层，那么其他的镜像只需要下载其他未下载过的层。\n\n层（Layers）使得镜像分发非常高效，同时也有助于减少镜像的存储占用。Docker 只存储每个层一次。如下图所示，两个由包含相同层的镜像创建的容器使用相同的文件。这意味着，尽管你可能有多个镜像，但它们共享某些层，这些层在磁盘上只被存储一次，而不是每个镜像都存储一份。这种机制不仅减少了磁盘空间的占用，还加快了镜像的加载速度，因为系统只需要加载那些在特定容器中实际被使用的层。\n![15](../../assets/image/k8s-in-action/15.png)\n图示表明容器A和B共享一个镜像层，这意味着应用程序A和B会读取一些相同的文件。此外，它们还与容器C共享底层。但是，如果这三个容器都能访问相同的文件，那么它们是如何完全彼此隔离的呢？应用程序A对存储在共享层中的文件所做的更改对应用程序B不可见吗？它们是不可见的。原因如下：\n\n文件系统通过写时复制（Copy-on-Write，简称CoW）机制实现隔离。容器的文件系统由容器镜像中的只读层和一个堆叠在顶部的额外读写层组成。当在容器A中运行的应用程序更改只读层中的一个文件时，整个文件会被复制到容器的读写层中，并在那里更改文件内容。由于每个容器都有自己的可写层，因此对共享文件的更改在任何其他容器中都是不可见的。\n\n当你删除一个文件时，它只是在读写层中被标记为已删除，但它仍然存在于一个或多个底层中。因此，删除文件永远不会减小镜像的大小。\n\n### 了解容器映像的可移植性限制\n理论上，基于Docker的容器镜像可以在任何运行Docker的Linux计算机上运行，但存在一个小小的注意事项，因为容器没有自己的内核。如果容器化应用程序需要特定版本的内核，那么它可能无法在每台计算机上运行。如果计算机运行的是不同版本的Linux内核或未加载所需的内核模块，则应用程序无法在该计算机上运行。\n\n![16](../../assets/image/k8s-in-action/16.png)\n容器B需要特定的内核模块才能正常运行。这个模块在第一台计算机的内核中已加载，但在第二台计算机中未加载。您可以在第二台计算机上运行容器镜像，但当它尝试使用缺失的模块时会出错。\n\n而且，这不仅仅是关于内核及其模块的问题。还应该明确的是，为特定硬件架构构建的容器化应用程序只能在具有相同架构的计算机上运行。不能将一个为x86 CPU架构编译的应用程序放入容器中，并期望它在基于ARM的计算机上运行仅仅因为那里运行着Docker。为此，需要一个虚拟机来模拟x86架构。\n\n<br>\n<br>\n\n\n","slug":"k8s-in-action/understanding-container","published":1,"updated":"2024-08-04T10:33:15.270Z","comments":1,"layout":"post","photos":[],"_id":"clzfffbud0001d8s60unoctro","content":"<p>当系统只有少量应用的时候，为每一个应用分配一个虚拟机并把应用运行在该虚拟机的系统上是没问题的。但是当使用微服务的时候，应用数量不断上升，这个时候再使用刚才的策略将消耗特别多的硬件资源，花费也是高昂的。<br><br>此外，每个虚拟机通常都需要单独配置和管理，这意味着运行更多的虚拟机也会导致对人员配置提出更高要求，并需要更好的、往往也更复杂的自动化系统。由于向微服务架构的转变，系统由数百个已部署的应用程序实例组成，因此需要虚拟机的替代品。容器就是这样的替代品。<br></p>\n<h2 id=\"对比容器和虚拟机\"><a href=\"#对比容器和虚拟机\" class=\"headerlink\" title=\"对比容器和虚拟机\"></a>对比容器和虚拟机</h2><p>与使用虚拟机来隔离各个微服务（或一般软件进程）的环境不同，现在大多数开发和运营团队更喜欢使用容器。它们允许您在同一台主机计算机上运行多个服务，同时保持它们彼此隔离。与虚拟机相似，但开销要小得多。<br><br>与每个都运行一个带有多个系统进程的独立操作系统的虚拟机不同，在容器中运行的进程在现有的主机操作系统内运行。由于只有一个操作系统，因此不存在重复的系统进程。尽管所有的应用程序进程都在同一个操作系统中运行，但它们的环境是隔离的，尽管隔离程度不如在单独的虚拟机中运行它们时好。对于容器中的进程而言，这种隔离使其看起来就像计算机上不存在其他进程一样。<br></p>\n<h3 id=\"容器和虚拟机的开销对比\"><a href=\"#容器和虚拟机的开销对比\" class=\"headerlink\" title=\"容器和虚拟机的开销对比\"></a>容器和虚拟机的开销对比</h3><p>与虚拟机相比，容器要轻得多，因为它们不需要单独的资源池或任何额外的操作系统级进程。每个虚拟机通常都运行自己的一套系统进程，这些进程除了用户应用程序自己的进程所消耗的资源外，还需要额外的计算资源，但容器只是在现有主机操作系统中运行的一个隔离进程，它只消耗应用程序所消耗的资源。</p>\n<p>下图显示了两台裸机计算机（bare metal computer），一台运行两个虚拟机，另一台则运行容器。后者有空间容纳额外的容器，因为它只运行一个操作系统，而第一台则运行三个——一个主机操作系统和两个guest操作系统。</p>\n<p><img src=\"/../../assets/image/k8s-in-action/8.png\" alt=\"8\"><br>由于虚拟机的资源开销，你通常会将多个应用程序分组到每个虚拟机中。你无法承担为每个应用程序分配一个完整的虚拟机的费用。但是容器不会引入任何开销，这意味着你可以承担为每个应用程序创建一个单独的容器的费用。事实上，你永远不应该在同一个容器中运行多个应用程序，因为这会使管理容器中的进程变得更加困难。此外，包括Kubernetes本身在内的所有处理容器的现有软件，都是在容器中只有一个应用程序的前提下设计的。</p>\n<h3 id=\"容器和虚拟机的启动时间对比\"><a href=\"#容器和虚拟机的启动时间对比\" class=\"headerlink\" title=\"容器和虚拟机的启动时间对比\"></a>容器和虚拟机的启动时间对比</h3><p>除了较低的运行时开销外，容器还能更快地启动应用程序，因为只需要启动应用程序进程本身。与启动新虚拟机时需要首先启动额外的系统进程不同，容器不需要这样做。</p>\n<h3 id=\"容器和虚拟机的隔离对比（isolation）\"><a href=\"#容器和虚拟机的隔离对比（isolation）\" class=\"headerlink\" title=\"容器和虚拟机的隔离对比（isolation）\"></a>容器和虚拟机的隔离对比（isolation）</h3><p>就资源使用而言，容器显然更胜一筹，但也存在一个缺点。当在虚拟机中运行应用程序时，每个虚拟机都会运行自己的操作系统和内核。在这些虚拟机之下是超管理器（以及可能的一个额外的操作系统），它将物理硬件资源分割成较小的虚拟资源集，供每个虚拟机中的操作系统使用。如下图所示，在这些虚拟机中运行的应用程序会对虚拟机中的客户操作系统内核发出<code>系统调用</code>，然后内核在虚拟CPU上执行的机器指令会通过超管理器转发给主机的物理CPU。<br><img src=\"/../../assets/image/k8s-in-action/9.png\" alt=\"9\"><br>另一方面，所有容器都在宿主操作系统中运行的单一内核上进行系统调用。这个单一内核是宿主CPU上唯一执行指令的实体。CPU不需要像处理虚拟机那样处理任何形式的虚拟化。<br><img src=\"/../../assets/image/k8s-in-action/10.png\" alt=\"10\"><br>在第一种情况下，所有三个应用程序都使用相同的内核，并且完全没有隔离。在第二种情况下，应用程序A和B在同一个虚拟机中运行，因此共享内核，而应用程序C则完全与其他两个隔离，因为它使用自己的内核。它只与前两个共享硬件。</p>\n<p>第三种情况显示了三个应用程序在容器中运行。尽管它们都使用相同的内核，但它们彼此隔离，并且完全不知道其他应用程序的存在。隔离是由内核本身提供的。每个应用程序只看到物理硬件的一部分，并且将自己视为操作系统中唯一运行的进程，尽管它们都在同一个操作系统中运行。</p>\n<h3 id=\"理解容器隔离的安全性影响\"><a href=\"#理解容器隔离的安全性影响\" class=\"headerlink\" title=\"理解容器隔离的安全性影响\"></a>理解容器隔离的安全性影响</h3><p>使用虚拟机而不是容器的主要优势是它们提供的完全隔离性，因为每个虚拟机都有自己的Linux内核，而所有容器都使用同一个内核。这明显会带来安全风险。如果内核中存在漏洞，一个容器中的应用程序可能会利用它来读取其他容器中应用程序的内存。如果应用程序在不同的虚拟机上运行，因此只共享硬件，那么此类攻击的可能性要低得多。当然，只有在不同的物理机器上运行应用程序才能实现完全隔离。</p>\n<p>此外，容器共享内存空间，而每个虚拟机都使用自己的内存块。因此，如果不限制容器可以使用的内存量，这可能会导致其他容器内存不足或将其数据交换到磁盘上。</p>\n<h3 id=\"理解容器和虚拟机的工作原理\"><a href=\"#理解容器和虚拟机的工作原理\" class=\"headerlink\" title=\"理解容器和虚拟机的工作原理\"></a>理解容器和虚拟机的工作原理</h3><p>虚拟机是通过CPU中的虚拟化支持和宿主机上的虚拟化软件来启用的，容器是由Linux内核本身启用的。</p>\n<h2 id=\"介绍Docker容器平台\"><a href=\"#介绍Docker容器平台\" class=\"headerlink\" title=\"介绍Docker容器平台\"></a>介绍Docker容器平台</h2><p>虽然容器技术已经存在很长时间了，但它们只是随着Docker的兴起才变得广为人知。Docker是第一个使容器能够轻松地在不同计算机之间移植的容器系统。它简化了将应用程序及其所有库和其他依赖项（甚至整个操作系统文件系统）打包成一个简单、可移植的包的过程，该包可用于在任何运行Docker的计算机上部署应用程序。</p>\n<h3 id=\"介绍容器、镜像和注册中心（container、image、registry）\"><a href=\"#介绍容器、镜像和注册中心（container、image、registry）\" class=\"headerlink\" title=\"介绍容器、镜像和注册中心（container、image、registry）\"></a>介绍容器、镜像和注册中心（container、image、registry）</h3><p>Docker是一个用于打包、分发和运行应用程序的平台。如前所述，它允许您将应用程序及其整个环境一起打包。这可能只是应用程序所需的一些动态链接库，或者是随操作系统一起提供的所有文件。Docker允许您通过公共存储库将此包分发到任何启用了Docker的计算机上。<br><img src=\"/../../assets/image/k8s-in-action/11.png\" alt=\"11\"></p>\n<ul>\n<li><strong>Image</strong>：容器镜像是您将<strong>应用程序</strong>及其<strong>环境</strong>打包成的东西，类似于一个压缩文件或归档文件。它包含了应用程序将使用的整个<strong>文件系统</strong>以及额外的<strong>元数据</strong>，比如当镜像被执行时运行的可执行文件的路径、应用程序监听的端口，以及关于镜像的其他信息。</li>\n<li><strong>Registry</strong>：注册中心是容器镜像的存储库，它使不同的人和计算机之间能够交换镜像。在构建镜像后，您可以在同一台计算机上运行它，或者将镜像推送到注册中心（上传），然后再将其拉取（下载）到另一台计算机。某些注册中心是公开的，允许任何人从中拉取镜像，而其他注册中心是私有的，仅对拥有必要身份验证凭据的个人、组织或计算机开放。</li>\n<li><strong>Container</strong>：容器是根据容器镜像实例化的。正在运行的容器是主机操作系统中运行的一个正常进程，但其环境与主机环境和其他进程的环境相隔离。容器的文件系统源自容器镜像，但也可以将其他文件系统挂载到容器中。容器通常受到资源限制，意味着它只能访问和使用为其分配的CPU和内存等资源量。</li>\n</ul>\n<h3 id=\"构建、分发和运行容器镜像\"><a href=\"#构建、分发和运行容器镜像\" class=\"headerlink\" title=\"构建、分发和运行容器镜像\"></a>构建、分发和运行容器镜像</h3><p>下面的几个图展示了容器镜像构建、分发、和运行的流程，同时也可以看出他们之前的关系。<br><img src=\"/../../assets/image/k8s-in-action/12.png\" alt=\"12\"><br><img src=\"/../../assets/image/k8s-in-action/13.png\" alt=\"13\"><br><img src=\"/../../assets/image/k8s-in-action/14.png\" alt=\"14\"></p>\n<h3 id=\"理解应用程序所看到的环境\"><a href=\"#理解应用程序所看到的环境\" class=\"headerlink\" title=\"理解应用程序所看到的环境\"></a>理解应用程序所看到的环境</h3><p>当在容器中运行应用程序时，它会看到打包到容器镜像中的文件系统内容，以及挂载到容器中的任何额外文件系统。无论应用程序是在笔记本电脑上运行还是在功能完备的生产服务器上运行，它看到的文件都是相同的，即使生产服务器使用的是完全不同的Linux发行版也是如此。应用程序通常无法访问主机操作系统中的文件，因此服务器的已安装依赖与开发计算机完全不同也没关系。</p>\n<p>例如，如果将您的应用程序与整个Red Hat Enterprise Linux（RHEL）操作系统的文件一起打包，然后运行它，应用程序会认为自己是在RHEL内部运行，无论您是在基于Fedora的计算机上还是基于Debian的计算机上运行它。主机上安装的Linux发行版无关紧要。唯一可能重要的是内核版本和它加载的内核模块。</p>\n<p>这与通过创建新的虚拟机、在其中安装操作系统和应用程序，然后分发整个虚拟机镜像以便其他人可以在不同的主机上运行它的方式来创建VM镜像类似。Docker达到了相同的效果，但它不是使用虚拟机来实现应用程序的隔离，而是使用Linux容器技术来达到（几乎）相同的隔离级别。</p>\n<h3 id=\"理解镜像层（Image-Layers）\"><a href=\"#理解镜像层（Image-Layers）\" class=\"headerlink\" title=\"理解镜像层（Image Layers）\"></a>理解镜像层（Image Layers）</h3><p>虚拟机镜像包含了安装在虚拟机中的操作系统所需的整个文件系统的庞大数据块，而容器镜像则由通常小得多的层组成。这些层可以在多个镜像之间共享和重用。这意味着，如果主机里包含相同层的另一个镜像已经下载了这些相同层，那么其他的镜像只需要下载其他未下载过的层。</p>\n<p>层（Layers）使得镜像分发非常高效，同时也有助于减少镜像的存储占用。Docker 只存储每个层一次。如下图所示，两个由包含相同层的镜像创建的容器使用相同的文件。这意味着，尽管你可能有多个镜像，但它们共享某些层，这些层在磁盘上只被存储一次，而不是每个镜像都存储一份。这种机制不仅减少了磁盘空间的占用，还加快了镜像的加载速度，因为系统只需要加载那些在特定容器中实际被使用的层。<br><img src=\"/../../assets/image/k8s-in-action/15.png\" alt=\"15\"><br>图示表明容器A和B共享一个镜像层，这意味着应用程序A和B会读取一些相同的文件。此外，它们还与容器C共享底层。但是，如果这三个容器都能访问相同的文件，那么它们是如何完全彼此隔离的呢？应用程序A对存储在共享层中的文件所做的更改对应用程序B不可见吗？它们是不可见的。原因如下：</p>\n<p>文件系统通过写时复制（Copy-on-Write，简称CoW）机制实现隔离。容器的文件系统由容器镜像中的只读层和一个堆叠在顶部的额外读写层组成。当在容器A中运行的应用程序更改只读层中的一个文件时，整个文件会被复制到容器的读写层中，并在那里更改文件内容。由于每个容器都有自己的可写层，因此对共享文件的更改在任何其他容器中都是不可见的。</p>\n<p>当你删除一个文件时，它只是在读写层中被标记为已删除，但它仍然存在于一个或多个底层中。因此，删除文件永远不会减小镜像的大小。</p>\n<h3 id=\"了解容器映像的可移植性限制\"><a href=\"#了解容器映像的可移植性限制\" class=\"headerlink\" title=\"了解容器映像的可移植性限制\"></a>了解容器映像的可移植性限制</h3><p>理论上，基于Docker的容器镜像可以在任何运行Docker的Linux计算机上运行，但存在一个小小的注意事项，因为容器没有自己的内核。如果容器化应用程序需要特定版本的内核，那么它可能无法在每台计算机上运行。如果计算机运行的是不同版本的Linux内核或未加载所需的内核模块，则应用程序无法在该计算机上运行。</p>\n<p><img src=\"/../../assets/image/k8s-in-action/16.png\" alt=\"16\"><br>容器B需要特定的内核模块才能正常运行。这个模块在第一台计算机的内核中已加载，但在第二台计算机中未加载。您可以在第二台计算机上运行容器镜像，但当它尝试使用缺失的模块时会出错。</p>\n<p>而且，这不仅仅是关于内核及其模块的问题。还应该明确的是，为特定硬件架构构建的容器化应用程序只能在具有相同架构的计算机上运行。不能将一个为x86 CPU架构编译的应用程序放入容器中，并期望它在基于ARM的计算机上运行仅仅因为那里运行着Docker。为此，需要一个虚拟机来模拟x86架构。</p>\n<br>\n<br>\n\n\n","excerpt":"","more":"<p>当系统只有少量应用的时候，为每一个应用分配一个虚拟机并把应用运行在该虚拟机的系统上是没问题的。但是当使用微服务的时候，应用数量不断上升，这个时候再使用刚才的策略将消耗特别多的硬件资源，花费也是高昂的。<br><br>此外，每个虚拟机通常都需要单独配置和管理，这意味着运行更多的虚拟机也会导致对人员配置提出更高要求，并需要更好的、往往也更复杂的自动化系统。由于向微服务架构的转变，系统由数百个已部署的应用程序实例组成，因此需要虚拟机的替代品。容器就是这样的替代品。<br></p>\n<h2 id=\"对比容器和虚拟机\"><a href=\"#对比容器和虚拟机\" class=\"headerlink\" title=\"对比容器和虚拟机\"></a>对比容器和虚拟机</h2><p>与使用虚拟机来隔离各个微服务（或一般软件进程）的环境不同，现在大多数开发和运营团队更喜欢使用容器。它们允许您在同一台主机计算机上运行多个服务，同时保持它们彼此隔离。与虚拟机相似，但开销要小得多。<br><br>与每个都运行一个带有多个系统进程的独立操作系统的虚拟机不同，在容器中运行的进程在现有的主机操作系统内运行。由于只有一个操作系统，因此不存在重复的系统进程。尽管所有的应用程序进程都在同一个操作系统中运行，但它们的环境是隔离的，尽管隔离程度不如在单独的虚拟机中运行它们时好。对于容器中的进程而言，这种隔离使其看起来就像计算机上不存在其他进程一样。<br></p>\n<h3 id=\"容器和虚拟机的开销对比\"><a href=\"#容器和虚拟机的开销对比\" class=\"headerlink\" title=\"容器和虚拟机的开销对比\"></a>容器和虚拟机的开销对比</h3><p>与虚拟机相比，容器要轻得多，因为它们不需要单独的资源池或任何额外的操作系统级进程。每个虚拟机通常都运行自己的一套系统进程，这些进程除了用户应用程序自己的进程所消耗的资源外，还需要额外的计算资源，但容器只是在现有主机操作系统中运行的一个隔离进程，它只消耗应用程序所消耗的资源。</p>\n<p>下图显示了两台裸机计算机（bare metal computer），一台运行两个虚拟机，另一台则运行容器。后者有空间容纳额外的容器，因为它只运行一个操作系统，而第一台则运行三个——一个主机操作系统和两个guest操作系统。</p>\n<p><img src=\"/../../assets/image/k8s-in-action/8.png\" alt=\"8\"><br>由于虚拟机的资源开销，你通常会将多个应用程序分组到每个虚拟机中。你无法承担为每个应用程序分配一个完整的虚拟机的费用。但是容器不会引入任何开销，这意味着你可以承担为每个应用程序创建一个单独的容器的费用。事实上，你永远不应该在同一个容器中运行多个应用程序，因为这会使管理容器中的进程变得更加困难。此外，包括Kubernetes本身在内的所有处理容器的现有软件，都是在容器中只有一个应用程序的前提下设计的。</p>\n<h3 id=\"容器和虚拟机的启动时间对比\"><a href=\"#容器和虚拟机的启动时间对比\" class=\"headerlink\" title=\"容器和虚拟机的启动时间对比\"></a>容器和虚拟机的启动时间对比</h3><p>除了较低的运行时开销外，容器还能更快地启动应用程序，因为只需要启动应用程序进程本身。与启动新虚拟机时需要首先启动额外的系统进程不同，容器不需要这样做。</p>\n<h3 id=\"容器和虚拟机的隔离对比（isolation）\"><a href=\"#容器和虚拟机的隔离对比（isolation）\" class=\"headerlink\" title=\"容器和虚拟机的隔离对比（isolation）\"></a>容器和虚拟机的隔离对比（isolation）</h3><p>就资源使用而言，容器显然更胜一筹，但也存在一个缺点。当在虚拟机中运行应用程序时，每个虚拟机都会运行自己的操作系统和内核。在这些虚拟机之下是超管理器（以及可能的一个额外的操作系统），它将物理硬件资源分割成较小的虚拟资源集，供每个虚拟机中的操作系统使用。如下图所示，在这些虚拟机中运行的应用程序会对虚拟机中的客户操作系统内核发出<code>系统调用</code>，然后内核在虚拟CPU上执行的机器指令会通过超管理器转发给主机的物理CPU。<br><img src=\"/../../assets/image/k8s-in-action/9.png\" alt=\"9\"><br>另一方面，所有容器都在宿主操作系统中运行的单一内核上进行系统调用。这个单一内核是宿主CPU上唯一执行指令的实体。CPU不需要像处理虚拟机那样处理任何形式的虚拟化。<br><img src=\"/../../assets/image/k8s-in-action/10.png\" alt=\"10\"><br>在第一种情况下，所有三个应用程序都使用相同的内核，并且完全没有隔离。在第二种情况下，应用程序A和B在同一个虚拟机中运行，因此共享内核，而应用程序C则完全与其他两个隔离，因为它使用自己的内核。它只与前两个共享硬件。</p>\n<p>第三种情况显示了三个应用程序在容器中运行。尽管它们都使用相同的内核，但它们彼此隔离，并且完全不知道其他应用程序的存在。隔离是由内核本身提供的。每个应用程序只看到物理硬件的一部分，并且将自己视为操作系统中唯一运行的进程，尽管它们都在同一个操作系统中运行。</p>\n<h3 id=\"理解容器隔离的安全性影响\"><a href=\"#理解容器隔离的安全性影响\" class=\"headerlink\" title=\"理解容器隔离的安全性影响\"></a>理解容器隔离的安全性影响</h3><p>使用虚拟机而不是容器的主要优势是它们提供的完全隔离性，因为每个虚拟机都有自己的Linux内核，而所有容器都使用同一个内核。这明显会带来安全风险。如果内核中存在漏洞，一个容器中的应用程序可能会利用它来读取其他容器中应用程序的内存。如果应用程序在不同的虚拟机上运行，因此只共享硬件，那么此类攻击的可能性要低得多。当然，只有在不同的物理机器上运行应用程序才能实现完全隔离。</p>\n<p>此外，容器共享内存空间，而每个虚拟机都使用自己的内存块。因此，如果不限制容器可以使用的内存量，这可能会导致其他容器内存不足或将其数据交换到磁盘上。</p>\n<h3 id=\"理解容器和虚拟机的工作原理\"><a href=\"#理解容器和虚拟机的工作原理\" class=\"headerlink\" title=\"理解容器和虚拟机的工作原理\"></a>理解容器和虚拟机的工作原理</h3><p>虚拟机是通过CPU中的虚拟化支持和宿主机上的虚拟化软件来启用的，容器是由Linux内核本身启用的。</p>\n<h2 id=\"介绍Docker容器平台\"><a href=\"#介绍Docker容器平台\" class=\"headerlink\" title=\"介绍Docker容器平台\"></a>介绍Docker容器平台</h2><p>虽然容器技术已经存在很长时间了，但它们只是随着Docker的兴起才变得广为人知。Docker是第一个使容器能够轻松地在不同计算机之间移植的容器系统。它简化了将应用程序及其所有库和其他依赖项（甚至整个操作系统文件系统）打包成一个简单、可移植的包的过程，该包可用于在任何运行Docker的计算机上部署应用程序。</p>\n<h3 id=\"介绍容器、镜像和注册中心（container、image、registry）\"><a href=\"#介绍容器、镜像和注册中心（container、image、registry）\" class=\"headerlink\" title=\"介绍容器、镜像和注册中心（container、image、registry）\"></a>介绍容器、镜像和注册中心（container、image、registry）</h3><p>Docker是一个用于打包、分发和运行应用程序的平台。如前所述，它允许您将应用程序及其整个环境一起打包。这可能只是应用程序所需的一些动态链接库，或者是随操作系统一起提供的所有文件。Docker允许您通过公共存储库将此包分发到任何启用了Docker的计算机上。<br><img src=\"/../../assets/image/k8s-in-action/11.png\" alt=\"11\"></p>\n<ul>\n<li><strong>Image</strong>：容器镜像是您将<strong>应用程序</strong>及其<strong>环境</strong>打包成的东西，类似于一个压缩文件或归档文件。它包含了应用程序将使用的整个<strong>文件系统</strong>以及额外的<strong>元数据</strong>，比如当镜像被执行时运行的可执行文件的路径、应用程序监听的端口，以及关于镜像的其他信息。</li>\n<li><strong>Registry</strong>：注册中心是容器镜像的存储库，它使不同的人和计算机之间能够交换镜像。在构建镜像后，您可以在同一台计算机上运行它，或者将镜像推送到注册中心（上传），然后再将其拉取（下载）到另一台计算机。某些注册中心是公开的，允许任何人从中拉取镜像，而其他注册中心是私有的，仅对拥有必要身份验证凭据的个人、组织或计算机开放。</li>\n<li><strong>Container</strong>：容器是根据容器镜像实例化的。正在运行的容器是主机操作系统中运行的一个正常进程，但其环境与主机环境和其他进程的环境相隔离。容器的文件系统源自容器镜像，但也可以将其他文件系统挂载到容器中。容器通常受到资源限制，意味着它只能访问和使用为其分配的CPU和内存等资源量。</li>\n</ul>\n<h3 id=\"构建、分发和运行容器镜像\"><a href=\"#构建、分发和运行容器镜像\" class=\"headerlink\" title=\"构建、分发和运行容器镜像\"></a>构建、分发和运行容器镜像</h3><p>下面的几个图展示了容器镜像构建、分发、和运行的流程，同时也可以看出他们之前的关系。<br><img src=\"/../../assets/image/k8s-in-action/12.png\" alt=\"12\"><br><img src=\"/../../assets/image/k8s-in-action/13.png\" alt=\"13\"><br><img src=\"/../../assets/image/k8s-in-action/14.png\" alt=\"14\"></p>\n<h3 id=\"理解应用程序所看到的环境\"><a href=\"#理解应用程序所看到的环境\" class=\"headerlink\" title=\"理解应用程序所看到的环境\"></a>理解应用程序所看到的环境</h3><p>当在容器中运行应用程序时，它会看到打包到容器镜像中的文件系统内容，以及挂载到容器中的任何额外文件系统。无论应用程序是在笔记本电脑上运行还是在功能完备的生产服务器上运行，它看到的文件都是相同的，即使生产服务器使用的是完全不同的Linux发行版也是如此。应用程序通常无法访问主机操作系统中的文件，因此服务器的已安装依赖与开发计算机完全不同也没关系。</p>\n<p>例如，如果将您的应用程序与整个Red Hat Enterprise Linux（RHEL）操作系统的文件一起打包，然后运行它，应用程序会认为自己是在RHEL内部运行，无论您是在基于Fedora的计算机上还是基于Debian的计算机上运行它。主机上安装的Linux发行版无关紧要。唯一可能重要的是内核版本和它加载的内核模块。</p>\n<p>这与通过创建新的虚拟机、在其中安装操作系统和应用程序，然后分发整个虚拟机镜像以便其他人可以在不同的主机上运行它的方式来创建VM镜像类似。Docker达到了相同的效果，但它不是使用虚拟机来实现应用程序的隔离，而是使用Linux容器技术来达到（几乎）相同的隔离级别。</p>\n<h3 id=\"理解镜像层（Image-Layers）\"><a href=\"#理解镜像层（Image-Layers）\" class=\"headerlink\" title=\"理解镜像层（Image Layers）\"></a>理解镜像层（Image Layers）</h3><p>虚拟机镜像包含了安装在虚拟机中的操作系统所需的整个文件系统的庞大数据块，而容器镜像则由通常小得多的层组成。这些层可以在多个镜像之间共享和重用。这意味着，如果主机里包含相同层的另一个镜像已经下载了这些相同层，那么其他的镜像只需要下载其他未下载过的层。</p>\n<p>层（Layers）使得镜像分发非常高效，同时也有助于减少镜像的存储占用。Docker 只存储每个层一次。如下图所示，两个由包含相同层的镜像创建的容器使用相同的文件。这意味着，尽管你可能有多个镜像，但它们共享某些层，这些层在磁盘上只被存储一次，而不是每个镜像都存储一份。这种机制不仅减少了磁盘空间的占用，还加快了镜像的加载速度，因为系统只需要加载那些在特定容器中实际被使用的层。<br><img src=\"/../../assets/image/k8s-in-action/15.png\" alt=\"15\"><br>图示表明容器A和B共享一个镜像层，这意味着应用程序A和B会读取一些相同的文件。此外，它们还与容器C共享底层。但是，如果这三个容器都能访问相同的文件，那么它们是如何完全彼此隔离的呢？应用程序A对存储在共享层中的文件所做的更改对应用程序B不可见吗？它们是不可见的。原因如下：</p>\n<p>文件系统通过写时复制（Copy-on-Write，简称CoW）机制实现隔离。容器的文件系统由容器镜像中的只读层和一个堆叠在顶部的额外读写层组成。当在容器A中运行的应用程序更改只读层中的一个文件时，整个文件会被复制到容器的读写层中，并在那里更改文件内容。由于每个容器都有自己的可写层，因此对共享文件的更改在任何其他容器中都是不可见的。</p>\n<p>当你删除一个文件时，它只是在读写层中被标记为已删除，但它仍然存在于一个或多个底层中。因此，删除文件永远不会减小镜像的大小。</p>\n<h3 id=\"了解容器映像的可移植性限制\"><a href=\"#了解容器映像的可移植性限制\" class=\"headerlink\" title=\"了解容器映像的可移植性限制\"></a>了解容器映像的可移植性限制</h3><p>理论上，基于Docker的容器镜像可以在任何运行Docker的Linux计算机上运行，但存在一个小小的注意事项，因为容器没有自己的内核。如果容器化应用程序需要特定版本的内核，那么它可能无法在每台计算机上运行。如果计算机运行的是不同版本的Linux内核或未加载所需的内核模块，则应用程序无法在该计算机上运行。</p>\n<p><img src=\"/../../assets/image/k8s-in-action/16.png\" alt=\"16\"><br>容器B需要特定的内核模块才能正常运行。这个模块在第一台计算机的内核中已加载，但在第二台计算机中未加载。您可以在第二台计算机上运行容器镜像，但当它尝试使用缺失的模块时会出错。</p>\n<p>而且，这不仅仅是关于内核及其模块的问题。还应该明确的是，为特定硬件架构构建的容器化应用程序只能在具有相同架构的计算机上运行。不能将一个为x86 CPU架构编译的应用程序放入容器中，并期望它在基于ARM的计算机上运行仅仅因为那里运行着Docker。为此，需要一个虚拟机来模拟x86架构。</p>\n<br>\n<br>\n\n\n"},{"title":"理解k8s","date":"2024-07-22T16:01:09.000Z","_content":"# 理解k8s如何如何转换计算机集群\n## Kubernetes就像计算机集群的操作系统\n如下图所示，正如操作系统支持计算机的基本功能，如将进程调度到CPU上，并作为**应用程序**与**计算机硬件**之间的接口，Kubernetes将分布式应用程序的组件调度\n到底层计算机集群中的各个计算机上，并作为**应用程序**与**集群**之间的接口。<br>\n![abc](../../assets/image/k8s-in-action/1.png)<br>\n\n它使应用程序开发人员无需在应用程序中实现与基础设施相关的机制；相反，他们依赖Kubernetes来提供这些功能。这包括：\n>服务发现 - 一种机制，允许应用程序找到其他应用程序并使用它们提供的服务  \n>水平扩展 - 通过复制应用程序来适应负载波动  \n>负载均衡 - 将负载分布到所有应用程序副本上  \n>自我修复 - 通过自动重启失败的应用程序并在其节点失败后将其移动到健康的节点上来保持系统健康  \n>领导者选举 - 一种机制，用于决定哪个应用程序实例应该处于活动状态，而其他实例则保持空闲但准备好在活动实例失败时接管。  \n\n## Kubernetes如何融入计算机集群\n为了获得一个关于Kubernetes如何部署到计算机集群中的具体示例，请查看下图。  \n    \n![2](../../assets/image/k8s-in-action/2.png)<br>\n你首先会有一组机器，你将这些机器分为两组——主节点和工作节点。主节点将运行Kubernetes控制平面，它代表系统的“大脑”并控制集群， 而其余节点将运行你的应用程序——即你的工作负载——因此将代表工作负载平面。<br>\n\n非生产集群可以使用单个主节点，但高可用集群至少使用三个物理主节点来承载控制平面。工作节点的数量取决于您要部署的应用程序的数量。<br>\n\n## 所有集群节点如何成为一个大型部署区域\n在计算机上安装 Kubernetes 后，部署应用程序时不再需要考虑单个计算机。无论集群中工作节点的数量是多少，它们都将成为部署应用程序的单一空间。\n可以使用Kubernetes API来实现这一点，该API是由Kubernetes控制平面提供的。<br>\n![3](../../assets/image/k8s-in-action/3.png)<br>\n\n这里说的所有节点是一个整体，并不是说可以将一个很大的应用部署在多个节点上。而且也不必在意应用最终部署在了哪个节点上，  因为k8s可能在你不知情的时候把应用从一个节点移动到另外一个节点上，这也不是部署者需要知道到事儿。<br>\n\n# 使用k8s的好处\n## 开发者自助部署应用程序(Self-service development)\n以前部署应用都是由专门的人员部署，有了k8s以后，程序可以自己通过k8s部署。他们不需要了解节点多少和节点的性能，也不用知道部署在哪个节点上，k8s将根据应用的需要的资源和节点可用的资源选择部署的节点。<br>\n\n## 通过更好的基础设施利用率降低成本\nk8s可以比人更快速地找到哪个应用更适合部署在哪个节点上，通过在一台服务器上部署多个不同的服务，k8s提高了硬件的利用率，以至于可以在更少的服务器上部署更多的应用。<br>\n\n## 自动调整以适应不断变化的负载\nk8s通过监控每个应用消耗的资源和其他指标，可以自动调整每个程序的实例数以应对负载或者使用资源的增加。开发者也不用担心会使用完资源，因为k8s可以通过云供应商的api提供额外的节点。<br>\n\n## 保持应用程序平稳运行\n1.当你当程序崩溃或者因为代码bug导致内存溢出，k8s可以自动为你重启应用，保证服务可以正常对外提供服务。\n2.当硬件出现故障时，k8s可以将你的应用迁移到正常到节点上。\n3.如果资源足够，哪怕是节点半夜出现了故障，k8s也会自动处理，运维同学则可以睡个好觉啦。\n\n## 简化程序部署\nKubernetes 提供了与基础设施相关的服务，这些服务在没有 Kubernetes 的情况下需要在自己的应用程序中实现。这包括在分布式应用程序中发现服务和/或对等节点、领导者选举、集中式应用程序配置等。Kubernetes 在提供这些服务的同时，保持了对应用程序的“无 Kubernetes 感知”特性，但当需要时，应用程序也可以查询 Kubernetes API 以获取有关其环境的详细信息。它们还可以使用 API 来更改环境。<br>\n\n# Kubernetes集群的架构\nk8s集群里的节点被分成了两组：\n1.由master节点组成的控制面板集群，是系统的大脑，控制整个集群。\n2.运行应用的一组负载面板。\n\n![4](../../assets/image/k8s-in-action/4.png)<br>\n\n## 控制面板组件（control plane） \nk8s的控制面板由多个组件构成，这些组件运行在master节点上，为了提高可用性，也可能运行在多个master节点上。<br>\n![5](../../assets/image/k8s-in-action/5.png)\n下面是控制面板里的组件和他们的功能：\n> **API Server**：提供了 RESTful 风格的 Kubernetes API，工程师通过此api创建对象。它提供了 REST API 供集群内部组件和外部客户端（如 kubectl、kubelet 等）进行通信和交互。\n> **etcd**：etcd分布式存储服务存储了通过api创建的对象，以及存储 Kubernetes 集群的所有配置数据，如 API 对象的状态信息。\n> **调度器**：决定每个应用程序实例应在哪个工作节点上运行\n> **控制器（Controllers）**：通过 API 激活创建的对象。它们中的大多数只是创建其他对象，但也有一些与外部系统（例如，通过其 API 与云提供商）进行通信。\n\n## 工作节点组件（worker node）\n工作组件上运行了我们的应用程序，也运行了一些k8s组件，这些组件提供了运行程序、监控、程序之间的连接等功能。\n下图展示了工作节点上运行等k8s组件。<br>\n![6](../../assets/image/k8s-in-action/6.png)\n下面是运行的k8s组件\n> **Kubelet**：是一个与API服务器通信并管理其节点上运行的应用程序的代理。它通过API报告这些应用程序和节点的状态。\n> **容器运行时（Container Runtime）**：可以是Docker或任何与Kubernetes兼容的其他运行时（runtime）。它根据Kubelet的指示在容器中运行应用程序。\n> **Kubernetes服务代理（Kube-Proxy）**：负责在应用程序之间负载均衡网络流量。尽管它的名字暗示流量会流经它，但实际上已经不再是这样了。Kube-Proxy的主要作用是通过网络规则来确保服务间的通信，而不是直接代理或转发流量。\n\n## 附加组件（add-on)\n大多数Kubernetes集群还包含其他几个组件，包括DNS服务器、网络插件、日志代理等。这些组件通常运行在工作节点上，但也可以配置为在主节点上运行。这些组件共同协作，以确保Kubernetes集群的顺利运行和高效管理。例如，DNS服务器负责集群内的服务发现，网络插件管理集群的网络配置和通信，而日志代理则负责收集和分析集群中应用程序的日志信息。<br>\n\n# k8s是如何运行一个程序的\n## 定义应用程序\n在Kubernetes中，一切都被表示为对象，且通过Kubernetes API创建和检索这些对象。应用程序由这些对象的几种类型组成——一种类型代表整个应用程序的部署，另一种类型代表应用程序的**一个**正在运行的实例，还有一种类型代表由这些实例集合提供的服务，并允许通过单个IP地址访问它们，此外还有许多其他类型。<br>\n下图展示了通过创建一个清单文件来部署应用程序的示例，该清单文件包含两个部署，并通过两个服务对外暴露这两个部署。<br>\n![7](../../assets/image/k8s-in-action/7.png)\n部署应用程序的时候会发生下面的动作：\n- 你将应用程序清单提交给Kubernetes API。API服务器将清单中定义的对象写入etcd。\n- 一个控制器注意到新创建的对象，并为每个应用程序实例创建了一个新对象。\n- 调度器为每个实例分配一个节点。\n- Kubelet注意到有一个实例被分配给了Kubelet的节点。它通过容器运行时（docker）运行应用程序实例。\n- Kube Proxy注意到应用程序实例已准备好接受来自客户端的连接，并为它们配置了一个负载均衡器。\n- Kubelets和控制器监视系统并保持应用程序运行。\n\n## 将应用程序提交给API\n创建好yaml或者json文件后，通过API提交文件，通常是通过k8s的终端命令工具`kubectl`来完成。<br>\nKubectl 会将文件拆分成单独的对象，并通过向 API 发送 HTTP PUT 或 POST 请求来创建每个对象，这通常是 RESTful API 的工作方式。API 服务器会验证这些对象，并将它们存储在 etcd 数据存储中。此外，它还会通知所有感兴趣的组件这些对象已被创建。接下来会解释的控制器（Controllers）就是这些组件之一。<br>\n\n## 关于控制器（Controller）\n大多数对象类型都有一个关联的控制器。控制器关注特定类型的对象。它会等待 API 服务器通知它新对象已被创建，然后执行操作以激活该对象。通常，控制器只是通过相同的 Kubernetes API 创建其他对象。例如，负责应用程序部署的控制器会创建一个或多个代表应用程序单独实例的对象。控制器创建的对象数量取决于应用程序部署对象中指定的副本数量。<br>\n\n## 关于调度器（Scheduler）\n调度器是一种特殊类型的控制器，其唯一任务是将应用程序实例调度到工作节点上。它为每个新的应用程序实例对象选择最佳的工作节点，并通过 API 修改对象来将该节点分配给实例。<br>\n\n## 关于Kubelet和Container Runtime\n在每个工作节点上运行的``Kubelet``也是一种控制器。它的任务是等待应用程序实例被分配到它所在的节点上，并运行该应用程序。这是通过指示容器运行时（container runtime）启动应用程序的容器来完成的。<br>\n\n## 关于Kube Proxy\n由于应用程序部署可能包含多个应用程序实例，因此需要一个负载均衡器来将它们暴露在单个 IP 地址下。Kube Proxy 是与 Kubelet 一起运行的另一个控制器，负责设置负载均衡器。<br>\n\n## 保持应用程序健康\n一旦应用程序启动并运行，Kubelet 会在应用程序终止时通过重启它来保持其健康。它还会通过更新代表应用程序实例的对象来报告应用程序的状态。其他控制器会监视这些对象，并确保如果它们的节点出现故障，则将应用程序移动到健康的节点上。<br>\n\n<br>\n<br>\n<br>\n\n\n\n\n\n\n","source":"_posts/k8s-in-action/understanding-k8s.md","raw":"---\ntitle: 理解k8s\ndate: 2024-07-23 00:01:09\ntags:\n- k8s\ncategories: k8s实战笔记\n---\n# 理解k8s如何如何转换计算机集群\n## Kubernetes就像计算机集群的操作系统\n如下图所示，正如操作系统支持计算机的基本功能，如将进程调度到CPU上，并作为**应用程序**与**计算机硬件**之间的接口，Kubernetes将分布式应用程序的组件调度\n到底层计算机集群中的各个计算机上，并作为**应用程序**与**集群**之间的接口。<br>\n![abc](../../assets/image/k8s-in-action/1.png)<br>\n\n它使应用程序开发人员无需在应用程序中实现与基础设施相关的机制；相反，他们依赖Kubernetes来提供这些功能。这包括：\n>服务发现 - 一种机制，允许应用程序找到其他应用程序并使用它们提供的服务  \n>水平扩展 - 通过复制应用程序来适应负载波动  \n>负载均衡 - 将负载分布到所有应用程序副本上  \n>自我修复 - 通过自动重启失败的应用程序并在其节点失败后将其移动到健康的节点上来保持系统健康  \n>领导者选举 - 一种机制，用于决定哪个应用程序实例应该处于活动状态，而其他实例则保持空闲但准备好在活动实例失败时接管。  \n\n## Kubernetes如何融入计算机集群\n为了获得一个关于Kubernetes如何部署到计算机集群中的具体示例，请查看下图。  \n    \n![2](../../assets/image/k8s-in-action/2.png)<br>\n你首先会有一组机器，你将这些机器分为两组——主节点和工作节点。主节点将运行Kubernetes控制平面，它代表系统的“大脑”并控制集群， 而其余节点将运行你的应用程序——即你的工作负载——因此将代表工作负载平面。<br>\n\n非生产集群可以使用单个主节点，但高可用集群至少使用三个物理主节点来承载控制平面。工作节点的数量取决于您要部署的应用程序的数量。<br>\n\n## 所有集群节点如何成为一个大型部署区域\n在计算机上安装 Kubernetes 后，部署应用程序时不再需要考虑单个计算机。无论集群中工作节点的数量是多少，它们都将成为部署应用程序的单一空间。\n可以使用Kubernetes API来实现这一点，该API是由Kubernetes控制平面提供的。<br>\n![3](../../assets/image/k8s-in-action/3.png)<br>\n\n这里说的所有节点是一个整体，并不是说可以将一个很大的应用部署在多个节点上。而且也不必在意应用最终部署在了哪个节点上，  因为k8s可能在你不知情的时候把应用从一个节点移动到另外一个节点上，这也不是部署者需要知道到事儿。<br>\n\n# 使用k8s的好处\n## 开发者自助部署应用程序(Self-service development)\n以前部署应用都是由专门的人员部署，有了k8s以后，程序可以自己通过k8s部署。他们不需要了解节点多少和节点的性能，也不用知道部署在哪个节点上，k8s将根据应用的需要的资源和节点可用的资源选择部署的节点。<br>\n\n## 通过更好的基础设施利用率降低成本\nk8s可以比人更快速地找到哪个应用更适合部署在哪个节点上，通过在一台服务器上部署多个不同的服务，k8s提高了硬件的利用率，以至于可以在更少的服务器上部署更多的应用。<br>\n\n## 自动调整以适应不断变化的负载\nk8s通过监控每个应用消耗的资源和其他指标，可以自动调整每个程序的实例数以应对负载或者使用资源的增加。开发者也不用担心会使用完资源，因为k8s可以通过云供应商的api提供额外的节点。<br>\n\n## 保持应用程序平稳运行\n1.当你当程序崩溃或者因为代码bug导致内存溢出，k8s可以自动为你重启应用，保证服务可以正常对外提供服务。\n2.当硬件出现故障时，k8s可以将你的应用迁移到正常到节点上。\n3.如果资源足够，哪怕是节点半夜出现了故障，k8s也会自动处理，运维同学则可以睡个好觉啦。\n\n## 简化程序部署\nKubernetes 提供了与基础设施相关的服务，这些服务在没有 Kubernetes 的情况下需要在自己的应用程序中实现。这包括在分布式应用程序中发现服务和/或对等节点、领导者选举、集中式应用程序配置等。Kubernetes 在提供这些服务的同时，保持了对应用程序的“无 Kubernetes 感知”特性，但当需要时，应用程序也可以查询 Kubernetes API 以获取有关其环境的详细信息。它们还可以使用 API 来更改环境。<br>\n\n# Kubernetes集群的架构\nk8s集群里的节点被分成了两组：\n1.由master节点组成的控制面板集群，是系统的大脑，控制整个集群。\n2.运行应用的一组负载面板。\n\n![4](../../assets/image/k8s-in-action/4.png)<br>\n\n## 控制面板组件（control plane） \nk8s的控制面板由多个组件构成，这些组件运行在master节点上，为了提高可用性，也可能运行在多个master节点上。<br>\n![5](../../assets/image/k8s-in-action/5.png)\n下面是控制面板里的组件和他们的功能：\n> **API Server**：提供了 RESTful 风格的 Kubernetes API，工程师通过此api创建对象。它提供了 REST API 供集群内部组件和外部客户端（如 kubectl、kubelet 等）进行通信和交互。\n> **etcd**：etcd分布式存储服务存储了通过api创建的对象，以及存储 Kubernetes 集群的所有配置数据，如 API 对象的状态信息。\n> **调度器**：决定每个应用程序实例应在哪个工作节点上运行\n> **控制器（Controllers）**：通过 API 激活创建的对象。它们中的大多数只是创建其他对象，但也有一些与外部系统（例如，通过其 API 与云提供商）进行通信。\n\n## 工作节点组件（worker node）\n工作组件上运行了我们的应用程序，也运行了一些k8s组件，这些组件提供了运行程序、监控、程序之间的连接等功能。\n下图展示了工作节点上运行等k8s组件。<br>\n![6](../../assets/image/k8s-in-action/6.png)\n下面是运行的k8s组件\n> **Kubelet**：是一个与API服务器通信并管理其节点上运行的应用程序的代理。它通过API报告这些应用程序和节点的状态。\n> **容器运行时（Container Runtime）**：可以是Docker或任何与Kubernetes兼容的其他运行时（runtime）。它根据Kubelet的指示在容器中运行应用程序。\n> **Kubernetes服务代理（Kube-Proxy）**：负责在应用程序之间负载均衡网络流量。尽管它的名字暗示流量会流经它，但实际上已经不再是这样了。Kube-Proxy的主要作用是通过网络规则来确保服务间的通信，而不是直接代理或转发流量。\n\n## 附加组件（add-on)\n大多数Kubernetes集群还包含其他几个组件，包括DNS服务器、网络插件、日志代理等。这些组件通常运行在工作节点上，但也可以配置为在主节点上运行。这些组件共同协作，以确保Kubernetes集群的顺利运行和高效管理。例如，DNS服务器负责集群内的服务发现，网络插件管理集群的网络配置和通信，而日志代理则负责收集和分析集群中应用程序的日志信息。<br>\n\n# k8s是如何运行一个程序的\n## 定义应用程序\n在Kubernetes中，一切都被表示为对象，且通过Kubernetes API创建和检索这些对象。应用程序由这些对象的几种类型组成——一种类型代表整个应用程序的部署，另一种类型代表应用程序的**一个**正在运行的实例，还有一种类型代表由这些实例集合提供的服务，并允许通过单个IP地址访问它们，此外还有许多其他类型。<br>\n下图展示了通过创建一个清单文件来部署应用程序的示例，该清单文件包含两个部署，并通过两个服务对外暴露这两个部署。<br>\n![7](../../assets/image/k8s-in-action/7.png)\n部署应用程序的时候会发生下面的动作：\n- 你将应用程序清单提交给Kubernetes API。API服务器将清单中定义的对象写入etcd。\n- 一个控制器注意到新创建的对象，并为每个应用程序实例创建了一个新对象。\n- 调度器为每个实例分配一个节点。\n- Kubelet注意到有一个实例被分配给了Kubelet的节点。它通过容器运行时（docker）运行应用程序实例。\n- Kube Proxy注意到应用程序实例已准备好接受来自客户端的连接，并为它们配置了一个负载均衡器。\n- Kubelets和控制器监视系统并保持应用程序运行。\n\n## 将应用程序提交给API\n创建好yaml或者json文件后，通过API提交文件，通常是通过k8s的终端命令工具`kubectl`来完成。<br>\nKubectl 会将文件拆分成单独的对象，并通过向 API 发送 HTTP PUT 或 POST 请求来创建每个对象，这通常是 RESTful API 的工作方式。API 服务器会验证这些对象，并将它们存储在 etcd 数据存储中。此外，它还会通知所有感兴趣的组件这些对象已被创建。接下来会解释的控制器（Controllers）就是这些组件之一。<br>\n\n## 关于控制器（Controller）\n大多数对象类型都有一个关联的控制器。控制器关注特定类型的对象。它会等待 API 服务器通知它新对象已被创建，然后执行操作以激活该对象。通常，控制器只是通过相同的 Kubernetes API 创建其他对象。例如，负责应用程序部署的控制器会创建一个或多个代表应用程序单独实例的对象。控制器创建的对象数量取决于应用程序部署对象中指定的副本数量。<br>\n\n## 关于调度器（Scheduler）\n调度器是一种特殊类型的控制器，其唯一任务是将应用程序实例调度到工作节点上。它为每个新的应用程序实例对象选择最佳的工作节点，并通过 API 修改对象来将该节点分配给实例。<br>\n\n## 关于Kubelet和Container Runtime\n在每个工作节点上运行的``Kubelet``也是一种控制器。它的任务是等待应用程序实例被分配到它所在的节点上，并运行该应用程序。这是通过指示容器运行时（container runtime）启动应用程序的容器来完成的。<br>\n\n## 关于Kube Proxy\n由于应用程序部署可能包含多个应用程序实例，因此需要一个负载均衡器来将它们暴露在单个 IP 地址下。Kube Proxy 是与 Kubelet 一起运行的另一个控制器，负责设置负载均衡器。<br>\n\n## 保持应用程序健康\n一旦应用程序启动并运行，Kubelet 会在应用程序终止时通过重启它来保持其健康。它还会通过更新代表应用程序实例的对象来报告应用程序的状态。其他控制器会监视这些对象，并确保如果它们的节点出现故障，则将应用程序移动到健康的节点上。<br>\n\n<br>\n<br>\n<br>\n\n\n\n\n\n\n","slug":"k8s-in-action/understanding-k8s","published":1,"updated":"2024-07-28T06:21:12.254Z","comments":1,"layout":"post","photos":[],"_id":"clzfffbuf0003d8s662jpcdsg","content":"<h1 id=\"理解k8s如何如何转换计算机集群\"><a href=\"#理解k8s如何如何转换计算机集群\" class=\"headerlink\" title=\"理解k8s如何如何转换计算机集群\"></a>理解k8s如何如何转换计算机集群</h1><h2 id=\"Kubernetes就像计算机集群的操作系统\"><a href=\"#Kubernetes就像计算机集群的操作系统\" class=\"headerlink\" title=\"Kubernetes就像计算机集群的操作系统\"></a>Kubernetes就像计算机集群的操作系统</h2><p>如下图所示，正如操作系统支持计算机的基本功能，如将进程调度到CPU上，并作为<strong>应用程序</strong>与<strong>计算机硬件</strong>之间的接口，Kubernetes将分布式应用程序的组件调度<br>到底层计算机集群中的各个计算机上，并作为<strong>应用程序</strong>与<strong>集群</strong>之间的接口。<br><br><img src=\"/../../assets/image/k8s-in-action/1.png\" alt=\"abc\"><br></p>\n<p>它使应用程序开发人员无需在应用程序中实现与基础设施相关的机制；相反，他们依赖Kubernetes来提供这些功能。这包括：</p>\n<blockquote>\n<p>服务发现 - 一种机制，允许应用程序找到其他应用程序并使用它们提供的服务<br>水平扩展 - 通过复制应用程序来适应负载波动<br>负载均衡 - 将负载分布到所有应用程序副本上<br>自我修复 - 通过自动重启失败的应用程序并在其节点失败后将其移动到健康的节点上来保持系统健康<br>领导者选举 - 一种机制，用于决定哪个应用程序实例应该处于活动状态，而其他实例则保持空闲但准备好在活动实例失败时接管。  </p>\n</blockquote>\n<h2 id=\"Kubernetes如何融入计算机集群\"><a href=\"#Kubernetes如何融入计算机集群\" class=\"headerlink\" title=\"Kubernetes如何融入计算机集群\"></a>Kubernetes如何融入计算机集群</h2><p>为了获得一个关于Kubernetes如何部署到计算机集群中的具体示例，请查看下图。  </p>\n<p><img src=\"/../../assets/image/k8s-in-action/2.png\" alt=\"2\"><br><br>你首先会有一组机器，你将这些机器分为两组——主节点和工作节点。主节点将运行Kubernetes控制平面，它代表系统的“大脑”并控制集群， 而其余节点将运行你的应用程序——即你的工作负载——因此将代表工作负载平面。<br></p>\n<p>非生产集群可以使用单个主节点，但高可用集群至少使用三个物理主节点来承载控制平面。工作节点的数量取决于您要部署的应用程序的数量。<br></p>\n<h2 id=\"所有集群节点如何成为一个大型部署区域\"><a href=\"#所有集群节点如何成为一个大型部署区域\" class=\"headerlink\" title=\"所有集群节点如何成为一个大型部署区域\"></a>所有集群节点如何成为一个大型部署区域</h2><p>在计算机上安装 Kubernetes 后，部署应用程序时不再需要考虑单个计算机。无论集群中工作节点的数量是多少，它们都将成为部署应用程序的单一空间。<br>可以使用Kubernetes API来实现这一点，该API是由Kubernetes控制平面提供的。<br><br><img src=\"/../../assets/image/k8s-in-action/3.png\" alt=\"3\"><br></p>\n<p>这里说的所有节点是一个整体，并不是说可以将一个很大的应用部署在多个节点上。而且也不必在意应用最终部署在了哪个节点上，  因为k8s可能在你不知情的时候把应用从一个节点移动到另外一个节点上，这也不是部署者需要知道到事儿。<br></p>\n<h1 id=\"使用k8s的好处\"><a href=\"#使用k8s的好处\" class=\"headerlink\" title=\"使用k8s的好处\"></a>使用k8s的好处</h1><h2 id=\"开发者自助部署应用程序-Self-service-development\"><a href=\"#开发者自助部署应用程序-Self-service-development\" class=\"headerlink\" title=\"开发者自助部署应用程序(Self-service development)\"></a>开发者自助部署应用程序(Self-service development)</h2><p>以前部署应用都是由专门的人员部署，有了k8s以后，程序可以自己通过k8s部署。他们不需要了解节点多少和节点的性能，也不用知道部署在哪个节点上，k8s将根据应用的需要的资源和节点可用的资源选择部署的节点。<br></p>\n<h2 id=\"通过更好的基础设施利用率降低成本\"><a href=\"#通过更好的基础设施利用率降低成本\" class=\"headerlink\" title=\"通过更好的基础设施利用率降低成本\"></a>通过更好的基础设施利用率降低成本</h2><p>k8s可以比人更快速地找到哪个应用更适合部署在哪个节点上，通过在一台服务器上部署多个不同的服务，k8s提高了硬件的利用率，以至于可以在更少的服务器上部署更多的应用。<br></p>\n<h2 id=\"自动调整以适应不断变化的负载\"><a href=\"#自动调整以适应不断变化的负载\" class=\"headerlink\" title=\"自动调整以适应不断变化的负载\"></a>自动调整以适应不断变化的负载</h2><p>k8s通过监控每个应用消耗的资源和其他指标，可以自动调整每个程序的实例数以应对负载或者使用资源的增加。开发者也不用担心会使用完资源，因为k8s可以通过云供应商的api提供额外的节点。<br></p>\n<h2 id=\"保持应用程序平稳运行\"><a href=\"#保持应用程序平稳运行\" class=\"headerlink\" title=\"保持应用程序平稳运行\"></a>保持应用程序平稳运行</h2><p>1.当你当程序崩溃或者因为代码bug导致内存溢出，k8s可以自动为你重启应用，保证服务可以正常对外提供服务。<br>2.当硬件出现故障时，k8s可以将你的应用迁移到正常到节点上。<br>3.如果资源足够，哪怕是节点半夜出现了故障，k8s也会自动处理，运维同学则可以睡个好觉啦。</p>\n<h2 id=\"简化程序部署\"><a href=\"#简化程序部署\" class=\"headerlink\" title=\"简化程序部署\"></a>简化程序部署</h2><p>Kubernetes 提供了与基础设施相关的服务，这些服务在没有 Kubernetes 的情况下需要在自己的应用程序中实现。这包括在分布式应用程序中发现服务和&#x2F;或对等节点、领导者选举、集中式应用程序配置等。Kubernetes 在提供这些服务的同时，保持了对应用程序的“无 Kubernetes 感知”特性，但当需要时，应用程序也可以查询 Kubernetes API 以获取有关其环境的详细信息。它们还可以使用 API 来更改环境。<br></p>\n<h1 id=\"Kubernetes集群的架构\"><a href=\"#Kubernetes集群的架构\" class=\"headerlink\" title=\"Kubernetes集群的架构\"></a>Kubernetes集群的架构</h1><p>k8s集群里的节点被分成了两组：<br>1.由master节点组成的控制面板集群，是系统的大脑，控制整个集群。<br>2.运行应用的一组负载面板。</p>\n<p><img src=\"/../../assets/image/k8s-in-action/4.png\" alt=\"4\"><br></p>\n<h2 id=\"控制面板组件（control-plane）\"><a href=\"#控制面板组件（control-plane）\" class=\"headerlink\" title=\"控制面板组件（control plane）\"></a>控制面板组件（control plane）</h2><p>k8s的控制面板由多个组件构成，这些组件运行在master节点上，为了提高可用性，也可能运行在多个master节点上。<br><br><img src=\"/../../assets/image/k8s-in-action/5.png\" alt=\"5\"><br>下面是控制面板里的组件和他们的功能：</p>\n<blockquote>\n<p><strong>API Server</strong>：提供了 RESTful 风格的 Kubernetes API，工程师通过此api创建对象。它提供了 REST API 供集群内部组件和外部客户端（如 kubectl、kubelet 等）进行通信和交互。<br><strong>etcd</strong>：etcd分布式存储服务存储了通过api创建的对象，以及存储 Kubernetes 集群的所有配置数据，如 API 对象的状态信息。<br><strong>调度器</strong>：决定每个应用程序实例应在哪个工作节点上运行<br><strong>控制器（Controllers）</strong>：通过 API 激活创建的对象。它们中的大多数只是创建其他对象，但也有一些与外部系统（例如，通过其 API 与云提供商）进行通信。</p>\n</blockquote>\n<h2 id=\"工作节点组件（worker-node）\"><a href=\"#工作节点组件（worker-node）\" class=\"headerlink\" title=\"工作节点组件（worker node）\"></a>工作节点组件（worker node）</h2><p>工作组件上运行了我们的应用程序，也运行了一些k8s组件，这些组件提供了运行程序、监控、程序之间的连接等功能。<br>下图展示了工作节点上运行等k8s组件。<br><br><img src=\"/../../assets/image/k8s-in-action/6.png\" alt=\"6\"><br>下面是运行的k8s组件</p>\n<blockquote>\n<p><strong>Kubelet</strong>：是一个与API服务器通信并管理其节点上运行的应用程序的代理。它通过API报告这些应用程序和节点的状态。<br><strong>容器运行时（Container Runtime）</strong>：可以是Docker或任何与Kubernetes兼容的其他运行时（runtime）。它根据Kubelet的指示在容器中运行应用程序。<br><strong>Kubernetes服务代理（Kube-Proxy）</strong>：负责在应用程序之间负载均衡网络流量。尽管它的名字暗示流量会流经它，但实际上已经不再是这样了。Kube-Proxy的主要作用是通过网络规则来确保服务间的通信，而不是直接代理或转发流量。</p>\n</blockquote>\n<h2 id=\"附加组件（add-on\"><a href=\"#附加组件（add-on\" class=\"headerlink\" title=\"附加组件（add-on)\"></a>附加组件（add-on)</h2><p>大多数Kubernetes集群还包含其他几个组件，包括DNS服务器、网络插件、日志代理等。这些组件通常运行在工作节点上，但也可以配置为在主节点上运行。这些组件共同协作，以确保Kubernetes集群的顺利运行和高效管理。例如，DNS服务器负责集群内的服务发现，网络插件管理集群的网络配置和通信，而日志代理则负责收集和分析集群中应用程序的日志信息。<br></p>\n<h1 id=\"k8s是如何运行一个程序的\"><a href=\"#k8s是如何运行一个程序的\" class=\"headerlink\" title=\"k8s是如何运行一个程序的\"></a>k8s是如何运行一个程序的</h1><h2 id=\"定义应用程序\"><a href=\"#定义应用程序\" class=\"headerlink\" title=\"定义应用程序\"></a>定义应用程序</h2><p>在Kubernetes中，一切都被表示为对象，且通过Kubernetes API创建和检索这些对象。应用程序由这些对象的几种类型组成——一种类型代表整个应用程序的部署，另一种类型代表应用程序的<strong>一个</strong>正在运行的实例，还有一种类型代表由这些实例集合提供的服务，并允许通过单个IP地址访问它们，此外还有许多其他类型。<br><br>下图展示了通过创建一个清单文件来部署应用程序的示例，该清单文件包含两个部署，并通过两个服务对外暴露这两个部署。<br><br><img src=\"/../../assets/image/k8s-in-action/7.png\" alt=\"7\"><br>部署应用程序的时候会发生下面的动作：</p>\n<ul>\n<li>你将应用程序清单提交给Kubernetes API。API服务器将清单中定义的对象写入etcd。</li>\n<li>一个控制器注意到新创建的对象，并为每个应用程序实例创建了一个新对象。</li>\n<li>调度器为每个实例分配一个节点。</li>\n<li>Kubelet注意到有一个实例被分配给了Kubelet的节点。它通过容器运行时（docker）运行应用程序实例。</li>\n<li>Kube Proxy注意到应用程序实例已准备好接受来自客户端的连接，并为它们配置了一个负载均衡器。</li>\n<li>Kubelets和控制器监视系统并保持应用程序运行。</li>\n</ul>\n<h2 id=\"将应用程序提交给API\"><a href=\"#将应用程序提交给API\" class=\"headerlink\" title=\"将应用程序提交给API\"></a>将应用程序提交给API</h2><p>创建好yaml或者json文件后，通过API提交文件，通常是通过k8s的终端命令工具<code>kubectl</code>来完成。<br><br>Kubectl 会将文件拆分成单独的对象，并通过向 API 发送 HTTP PUT 或 POST 请求来创建每个对象，这通常是 RESTful API 的工作方式。API 服务器会验证这些对象，并将它们存储在 etcd 数据存储中。此外，它还会通知所有感兴趣的组件这些对象已被创建。接下来会解释的控制器（Controllers）就是这些组件之一。<br></p>\n<h2 id=\"关于控制器（Controller）\"><a href=\"#关于控制器（Controller）\" class=\"headerlink\" title=\"关于控制器（Controller）\"></a>关于控制器（Controller）</h2><p>大多数对象类型都有一个关联的控制器。控制器关注特定类型的对象。它会等待 API 服务器通知它新对象已被创建，然后执行操作以激活该对象。通常，控制器只是通过相同的 Kubernetes API 创建其他对象。例如，负责应用程序部署的控制器会创建一个或多个代表应用程序单独实例的对象。控制器创建的对象数量取决于应用程序部署对象中指定的副本数量。<br></p>\n<h2 id=\"关于调度器（Scheduler）\"><a href=\"#关于调度器（Scheduler）\" class=\"headerlink\" title=\"关于调度器（Scheduler）\"></a>关于调度器（Scheduler）</h2><p>调度器是一种特殊类型的控制器，其唯一任务是将应用程序实例调度到工作节点上。它为每个新的应用程序实例对象选择最佳的工作节点，并通过 API 修改对象来将该节点分配给实例。<br></p>\n<h2 id=\"关于Kubelet和Container-Runtime\"><a href=\"#关于Kubelet和Container-Runtime\" class=\"headerlink\" title=\"关于Kubelet和Container Runtime\"></a>关于Kubelet和Container Runtime</h2><p>在每个工作节点上运行的<code>Kubelet</code>也是一种控制器。它的任务是等待应用程序实例被分配到它所在的节点上，并运行该应用程序。这是通过指示容器运行时（container runtime）启动应用程序的容器来完成的。<br></p>\n<h2 id=\"关于Kube-Proxy\"><a href=\"#关于Kube-Proxy\" class=\"headerlink\" title=\"关于Kube Proxy\"></a>关于Kube Proxy</h2><p>由于应用程序部署可能包含多个应用程序实例，因此需要一个负载均衡器来将它们暴露在单个 IP 地址下。Kube Proxy 是与 Kubelet 一起运行的另一个控制器，负责设置负载均衡器。<br></p>\n<h2 id=\"保持应用程序健康\"><a href=\"#保持应用程序健康\" class=\"headerlink\" title=\"保持应用程序健康\"></a>保持应用程序健康</h2><p>一旦应用程序启动并运行，Kubelet 会在应用程序终止时通过重启它来保持其健康。它还会通过更新代表应用程序实例的对象来报告应用程序的状态。其他控制器会监视这些对象，并确保如果它们的节点出现故障，则将应用程序移动到健康的节点上。<br></p>\n<br>\n<br>\n<br>\n\n\n\n\n\n\n","excerpt":"","more":"<h1 id=\"理解k8s如何如何转换计算机集群\"><a href=\"#理解k8s如何如何转换计算机集群\" class=\"headerlink\" title=\"理解k8s如何如何转换计算机集群\"></a>理解k8s如何如何转换计算机集群</h1><h2 id=\"Kubernetes就像计算机集群的操作系统\"><a href=\"#Kubernetes就像计算机集群的操作系统\" class=\"headerlink\" title=\"Kubernetes就像计算机集群的操作系统\"></a>Kubernetes就像计算机集群的操作系统</h2><p>如下图所示，正如操作系统支持计算机的基本功能，如将进程调度到CPU上，并作为<strong>应用程序</strong>与<strong>计算机硬件</strong>之间的接口，Kubernetes将分布式应用程序的组件调度<br>到底层计算机集群中的各个计算机上，并作为<strong>应用程序</strong>与<strong>集群</strong>之间的接口。<br><br><img src=\"/../../assets/image/k8s-in-action/1.png\" alt=\"abc\"><br></p>\n<p>它使应用程序开发人员无需在应用程序中实现与基础设施相关的机制；相反，他们依赖Kubernetes来提供这些功能。这包括：</p>\n<blockquote>\n<p>服务发现 - 一种机制，允许应用程序找到其他应用程序并使用它们提供的服务<br>水平扩展 - 通过复制应用程序来适应负载波动<br>负载均衡 - 将负载分布到所有应用程序副本上<br>自我修复 - 通过自动重启失败的应用程序并在其节点失败后将其移动到健康的节点上来保持系统健康<br>领导者选举 - 一种机制，用于决定哪个应用程序实例应该处于活动状态，而其他实例则保持空闲但准备好在活动实例失败时接管。  </p>\n</blockquote>\n<h2 id=\"Kubernetes如何融入计算机集群\"><a href=\"#Kubernetes如何融入计算机集群\" class=\"headerlink\" title=\"Kubernetes如何融入计算机集群\"></a>Kubernetes如何融入计算机集群</h2><p>为了获得一个关于Kubernetes如何部署到计算机集群中的具体示例，请查看下图。  </p>\n<p><img src=\"/../../assets/image/k8s-in-action/2.png\" alt=\"2\"><br><br>你首先会有一组机器，你将这些机器分为两组——主节点和工作节点。主节点将运行Kubernetes控制平面，它代表系统的“大脑”并控制集群， 而其余节点将运行你的应用程序——即你的工作负载——因此将代表工作负载平面。<br></p>\n<p>非生产集群可以使用单个主节点，但高可用集群至少使用三个物理主节点来承载控制平面。工作节点的数量取决于您要部署的应用程序的数量。<br></p>\n<h2 id=\"所有集群节点如何成为一个大型部署区域\"><a href=\"#所有集群节点如何成为一个大型部署区域\" class=\"headerlink\" title=\"所有集群节点如何成为一个大型部署区域\"></a>所有集群节点如何成为一个大型部署区域</h2><p>在计算机上安装 Kubernetes 后，部署应用程序时不再需要考虑单个计算机。无论集群中工作节点的数量是多少，它们都将成为部署应用程序的单一空间。<br>可以使用Kubernetes API来实现这一点，该API是由Kubernetes控制平面提供的。<br><br><img src=\"/../../assets/image/k8s-in-action/3.png\" alt=\"3\"><br></p>\n<p>这里说的所有节点是一个整体，并不是说可以将一个很大的应用部署在多个节点上。而且也不必在意应用最终部署在了哪个节点上，  因为k8s可能在你不知情的时候把应用从一个节点移动到另外一个节点上，这也不是部署者需要知道到事儿。<br></p>\n<h1 id=\"使用k8s的好处\"><a href=\"#使用k8s的好处\" class=\"headerlink\" title=\"使用k8s的好处\"></a>使用k8s的好处</h1><h2 id=\"开发者自助部署应用程序-Self-service-development\"><a href=\"#开发者自助部署应用程序-Self-service-development\" class=\"headerlink\" title=\"开发者自助部署应用程序(Self-service development)\"></a>开发者自助部署应用程序(Self-service development)</h2><p>以前部署应用都是由专门的人员部署，有了k8s以后，程序可以自己通过k8s部署。他们不需要了解节点多少和节点的性能，也不用知道部署在哪个节点上，k8s将根据应用的需要的资源和节点可用的资源选择部署的节点。<br></p>\n<h2 id=\"通过更好的基础设施利用率降低成本\"><a href=\"#通过更好的基础设施利用率降低成本\" class=\"headerlink\" title=\"通过更好的基础设施利用率降低成本\"></a>通过更好的基础设施利用率降低成本</h2><p>k8s可以比人更快速地找到哪个应用更适合部署在哪个节点上，通过在一台服务器上部署多个不同的服务，k8s提高了硬件的利用率，以至于可以在更少的服务器上部署更多的应用。<br></p>\n<h2 id=\"自动调整以适应不断变化的负载\"><a href=\"#自动调整以适应不断变化的负载\" class=\"headerlink\" title=\"自动调整以适应不断变化的负载\"></a>自动调整以适应不断变化的负载</h2><p>k8s通过监控每个应用消耗的资源和其他指标，可以自动调整每个程序的实例数以应对负载或者使用资源的增加。开发者也不用担心会使用完资源，因为k8s可以通过云供应商的api提供额外的节点。<br></p>\n<h2 id=\"保持应用程序平稳运行\"><a href=\"#保持应用程序平稳运行\" class=\"headerlink\" title=\"保持应用程序平稳运行\"></a>保持应用程序平稳运行</h2><p>1.当你当程序崩溃或者因为代码bug导致内存溢出，k8s可以自动为你重启应用，保证服务可以正常对外提供服务。<br>2.当硬件出现故障时，k8s可以将你的应用迁移到正常到节点上。<br>3.如果资源足够，哪怕是节点半夜出现了故障，k8s也会自动处理，运维同学则可以睡个好觉啦。</p>\n<h2 id=\"简化程序部署\"><a href=\"#简化程序部署\" class=\"headerlink\" title=\"简化程序部署\"></a>简化程序部署</h2><p>Kubernetes 提供了与基础设施相关的服务，这些服务在没有 Kubernetes 的情况下需要在自己的应用程序中实现。这包括在分布式应用程序中发现服务和&#x2F;或对等节点、领导者选举、集中式应用程序配置等。Kubernetes 在提供这些服务的同时，保持了对应用程序的“无 Kubernetes 感知”特性，但当需要时，应用程序也可以查询 Kubernetes API 以获取有关其环境的详细信息。它们还可以使用 API 来更改环境。<br></p>\n<h1 id=\"Kubernetes集群的架构\"><a href=\"#Kubernetes集群的架构\" class=\"headerlink\" title=\"Kubernetes集群的架构\"></a>Kubernetes集群的架构</h1><p>k8s集群里的节点被分成了两组：<br>1.由master节点组成的控制面板集群，是系统的大脑，控制整个集群。<br>2.运行应用的一组负载面板。</p>\n<p><img src=\"/../../assets/image/k8s-in-action/4.png\" alt=\"4\"><br></p>\n<h2 id=\"控制面板组件（control-plane）\"><a href=\"#控制面板组件（control-plane）\" class=\"headerlink\" title=\"控制面板组件（control plane）\"></a>控制面板组件（control plane）</h2><p>k8s的控制面板由多个组件构成，这些组件运行在master节点上，为了提高可用性，也可能运行在多个master节点上。<br><br><img src=\"/../../assets/image/k8s-in-action/5.png\" alt=\"5\"><br>下面是控制面板里的组件和他们的功能：</p>\n<blockquote>\n<p><strong>API Server</strong>：提供了 RESTful 风格的 Kubernetes API，工程师通过此api创建对象。它提供了 REST API 供集群内部组件和外部客户端（如 kubectl、kubelet 等）进行通信和交互。<br><strong>etcd</strong>：etcd分布式存储服务存储了通过api创建的对象，以及存储 Kubernetes 集群的所有配置数据，如 API 对象的状态信息。<br><strong>调度器</strong>：决定每个应用程序实例应在哪个工作节点上运行<br><strong>控制器（Controllers）</strong>：通过 API 激活创建的对象。它们中的大多数只是创建其他对象，但也有一些与外部系统（例如，通过其 API 与云提供商）进行通信。</p>\n</blockquote>\n<h2 id=\"工作节点组件（worker-node）\"><a href=\"#工作节点组件（worker-node）\" class=\"headerlink\" title=\"工作节点组件（worker node）\"></a>工作节点组件（worker node）</h2><p>工作组件上运行了我们的应用程序，也运行了一些k8s组件，这些组件提供了运行程序、监控、程序之间的连接等功能。<br>下图展示了工作节点上运行等k8s组件。<br><br><img src=\"/../../assets/image/k8s-in-action/6.png\" alt=\"6\"><br>下面是运行的k8s组件</p>\n<blockquote>\n<p><strong>Kubelet</strong>：是一个与API服务器通信并管理其节点上运行的应用程序的代理。它通过API报告这些应用程序和节点的状态。<br><strong>容器运行时（Container Runtime）</strong>：可以是Docker或任何与Kubernetes兼容的其他运行时（runtime）。它根据Kubelet的指示在容器中运行应用程序。<br><strong>Kubernetes服务代理（Kube-Proxy）</strong>：负责在应用程序之间负载均衡网络流量。尽管它的名字暗示流量会流经它，但实际上已经不再是这样了。Kube-Proxy的主要作用是通过网络规则来确保服务间的通信，而不是直接代理或转发流量。</p>\n</blockquote>\n<h2 id=\"附加组件（add-on\"><a href=\"#附加组件（add-on\" class=\"headerlink\" title=\"附加组件（add-on)\"></a>附加组件（add-on)</h2><p>大多数Kubernetes集群还包含其他几个组件，包括DNS服务器、网络插件、日志代理等。这些组件通常运行在工作节点上，但也可以配置为在主节点上运行。这些组件共同协作，以确保Kubernetes集群的顺利运行和高效管理。例如，DNS服务器负责集群内的服务发现，网络插件管理集群的网络配置和通信，而日志代理则负责收集和分析集群中应用程序的日志信息。<br></p>\n<h1 id=\"k8s是如何运行一个程序的\"><a href=\"#k8s是如何运行一个程序的\" class=\"headerlink\" title=\"k8s是如何运行一个程序的\"></a>k8s是如何运行一个程序的</h1><h2 id=\"定义应用程序\"><a href=\"#定义应用程序\" class=\"headerlink\" title=\"定义应用程序\"></a>定义应用程序</h2><p>在Kubernetes中，一切都被表示为对象，且通过Kubernetes API创建和检索这些对象。应用程序由这些对象的几种类型组成——一种类型代表整个应用程序的部署，另一种类型代表应用程序的<strong>一个</strong>正在运行的实例，还有一种类型代表由这些实例集合提供的服务，并允许通过单个IP地址访问它们，此外还有许多其他类型。<br><br>下图展示了通过创建一个清单文件来部署应用程序的示例，该清单文件包含两个部署，并通过两个服务对外暴露这两个部署。<br><br><img src=\"/../../assets/image/k8s-in-action/7.png\" alt=\"7\"><br>部署应用程序的时候会发生下面的动作：</p>\n<ul>\n<li>你将应用程序清单提交给Kubernetes API。API服务器将清单中定义的对象写入etcd。</li>\n<li>一个控制器注意到新创建的对象，并为每个应用程序实例创建了一个新对象。</li>\n<li>调度器为每个实例分配一个节点。</li>\n<li>Kubelet注意到有一个实例被分配给了Kubelet的节点。它通过容器运行时（docker）运行应用程序实例。</li>\n<li>Kube Proxy注意到应用程序实例已准备好接受来自客户端的连接，并为它们配置了一个负载均衡器。</li>\n<li>Kubelets和控制器监视系统并保持应用程序运行。</li>\n</ul>\n<h2 id=\"将应用程序提交给API\"><a href=\"#将应用程序提交给API\" class=\"headerlink\" title=\"将应用程序提交给API\"></a>将应用程序提交给API</h2><p>创建好yaml或者json文件后，通过API提交文件，通常是通过k8s的终端命令工具<code>kubectl</code>来完成。<br><br>Kubectl 会将文件拆分成单独的对象，并通过向 API 发送 HTTP PUT 或 POST 请求来创建每个对象，这通常是 RESTful API 的工作方式。API 服务器会验证这些对象，并将它们存储在 etcd 数据存储中。此外，它还会通知所有感兴趣的组件这些对象已被创建。接下来会解释的控制器（Controllers）就是这些组件之一。<br></p>\n<h2 id=\"关于控制器（Controller）\"><a href=\"#关于控制器（Controller）\" class=\"headerlink\" title=\"关于控制器（Controller）\"></a>关于控制器（Controller）</h2><p>大多数对象类型都有一个关联的控制器。控制器关注特定类型的对象。它会等待 API 服务器通知它新对象已被创建，然后执行操作以激活该对象。通常，控制器只是通过相同的 Kubernetes API 创建其他对象。例如，负责应用程序部署的控制器会创建一个或多个代表应用程序单独实例的对象。控制器创建的对象数量取决于应用程序部署对象中指定的副本数量。<br></p>\n<h2 id=\"关于调度器（Scheduler）\"><a href=\"#关于调度器（Scheduler）\" class=\"headerlink\" title=\"关于调度器（Scheduler）\"></a>关于调度器（Scheduler）</h2><p>调度器是一种特殊类型的控制器，其唯一任务是将应用程序实例调度到工作节点上。它为每个新的应用程序实例对象选择最佳的工作节点，并通过 API 修改对象来将该节点分配给实例。<br></p>\n<h2 id=\"关于Kubelet和Container-Runtime\"><a href=\"#关于Kubelet和Container-Runtime\" class=\"headerlink\" title=\"关于Kubelet和Container Runtime\"></a>关于Kubelet和Container Runtime</h2><p>在每个工作节点上运行的<code>Kubelet</code>也是一种控制器。它的任务是等待应用程序实例被分配到它所在的节点上，并运行该应用程序。这是通过指示容器运行时（container runtime）启动应用程序的容器来完成的。<br></p>\n<h2 id=\"关于Kube-Proxy\"><a href=\"#关于Kube-Proxy\" class=\"headerlink\" title=\"关于Kube Proxy\"></a>关于Kube Proxy</h2><p>由于应用程序部署可能包含多个应用程序实例，因此需要一个负载均衡器来将它们暴露在单个 IP 地址下。Kube Proxy 是与 Kubelet 一起运行的另一个控制器，负责设置负载均衡器。<br></p>\n<h2 id=\"保持应用程序健康\"><a href=\"#保持应用程序健康\" class=\"headerlink\" title=\"保持应用程序健康\"></a>保持应用程序健康</h2><p>一旦应用程序启动并运行，Kubelet 会在应用程序终止时通过重启它来保持其健康。它还会通过更新代表应用程序实例的对象来报告应用程序的状态。其他控制器会监视这些对象，并确保如果它们的节点出现故障，则将应用程序移动到健康的节点上。<br></p>\n<br>\n<br>\n<br>\n\n\n\n\n\n\n"},{"title":"容器运行hello-world","date":"2024-08-04T10:51:00.000Z","_content":"\n理想情况下，直接在Linux计算机上安装Docker，这样就不必处理在**宿主操作系统内运行**的**虚拟机**中**运行容器**的额外复杂性。但是，如果使用的是macOS或Windows，并且不知道如何设置Linux虚拟机，那么Docker Desktop应用程序可以完成设置。运行容器的Docker命令行（CLI）工具将安装在宿主操作系统上，但Docker守护进程（daemon）将在虚拟机内运行，它所创建的所有容器也将如此。\n\nDocker平台由许多组件组成，但只需要安装Docker Engine即可运行容器。如果使用的是macOS或Windows，需要先安装Docker Desktop。Docker文档地址：[https://docs.docker.com/get-docker/](https://docs.docker.com/get-docker/)。\n\n## 运行一个hello-world容器\n为了回显'hello-world'，需要先从Docker Hub中拉取一个叫`busybox`的镜像。`busybox`是一个可执行文件，它结合了许多标准的UNIX命令行工具，如echo、ls、gzip。当然，还有其他的镜像可以做到执行回显命令。\n\n可以使用单个`docker run`命令完成下载指定的映像和在其中运行的命令。要运行简单的Hello world容器，请执行以下列表中显示的命令：\n```bash\n$ docker run busybox echo \"Hello World\"\nUnable to find image 'busybox:latest' locally\nlatest: Pulling from library/busybox\n213a27df5921: Pull complete\nDigest: sha256:9ae97d36d26566ff84e8893c64a6dc4fe8ca6d1144bf5b87b2b85a32def253c7\nStatus: Downloaded newer image for busybox:latest\nHello World\n```\n\n## 当运行容器的时候发生了什么？\n下图展示了当运行`docker run`命令的时候发生了什么\n![17](../../assets/image/k8s-in-action/17.png)\n将镜像下载到您的计算机后，Docker 守护进程根据该镜像创建了一个容器，并在其中执行了 echo 命令。该命令将文本打印到标准输出，然后进程终止，容器停止。\n\n## 运行其他的镜像\n运行其他现有的容器镜像与运行busybox镜像非常相似。实际上，它通常甚至更简单，因为通常不需要像在前面的示例中的echo命令那样指定要执行的命令。要执行的命令通常写在镜像本身中，但可以在运行时覆盖它。\n\n例如，如果想运行Redis数据存储，可以在[http://hub.docker.com](http://hub.docker.com)或其他公共注册中心找到镜像名称。对于Redis来说，其中一个镜像被称为redis:alpine，所以可以像这样运行它：\n```bash\n$ docker run redis:alpine\n```\n\n\n\n\n<br>\n<br>\n","source":"_posts/k8s-in-action/explore-container-hands-on.md","raw":"---\ntitle: 容器运行hello-world\ndate: 2024-08-04 18:51:00\ntags:\n- 容器\n- k8s\ncategories: k8s实战笔记\n---\n\n理想情况下，直接在Linux计算机上安装Docker，这样就不必处理在**宿主操作系统内运行**的**虚拟机**中**运行容器**的额外复杂性。但是，如果使用的是macOS或Windows，并且不知道如何设置Linux虚拟机，那么Docker Desktop应用程序可以完成设置。运行容器的Docker命令行（CLI）工具将安装在宿主操作系统上，但Docker守护进程（daemon）将在虚拟机内运行，它所创建的所有容器也将如此。\n\nDocker平台由许多组件组成，但只需要安装Docker Engine即可运行容器。如果使用的是macOS或Windows，需要先安装Docker Desktop。Docker文档地址：[https://docs.docker.com/get-docker/](https://docs.docker.com/get-docker/)。\n\n## 运行一个hello-world容器\n为了回显'hello-world'，需要先从Docker Hub中拉取一个叫`busybox`的镜像。`busybox`是一个可执行文件，它结合了许多标准的UNIX命令行工具，如echo、ls、gzip。当然，还有其他的镜像可以做到执行回显命令。\n\n可以使用单个`docker run`命令完成下载指定的映像和在其中运行的命令。要运行简单的Hello world容器，请执行以下列表中显示的命令：\n```bash\n$ docker run busybox echo \"Hello World\"\nUnable to find image 'busybox:latest' locally\nlatest: Pulling from library/busybox\n213a27df5921: Pull complete\nDigest: sha256:9ae97d36d26566ff84e8893c64a6dc4fe8ca6d1144bf5b87b2b85a32def253c7\nStatus: Downloaded newer image for busybox:latest\nHello World\n```\n\n## 当运行容器的时候发生了什么？\n下图展示了当运行`docker run`命令的时候发生了什么\n![17](../../assets/image/k8s-in-action/17.png)\n将镜像下载到您的计算机后，Docker 守护进程根据该镜像创建了一个容器，并在其中执行了 echo 命令。该命令将文本打印到标准输出，然后进程终止，容器停止。\n\n## 运行其他的镜像\n运行其他现有的容器镜像与运行busybox镜像非常相似。实际上，它通常甚至更简单，因为通常不需要像在前面的示例中的echo命令那样指定要执行的命令。要执行的命令通常写在镜像本身中，但可以在运行时覆盖它。\n\n例如，如果想运行Redis数据存储，可以在[http://hub.docker.com](http://hub.docker.com)或其他公共注册中心找到镜像名称。对于Redis来说，其中一个镜像被称为redis:alpine，所以可以像这样运行它：\n```bash\n$ docker run redis:alpine\n```\n\n\n\n\n<br>\n<br>\n","slug":"k8s-in-action/explore-container-hands-on","published":1,"updated":"2024-08-04T11:47:30.585Z","_id":"clzfg0bnt00005hs61sjdcvb4","comments":1,"layout":"post","photos":[],"content":"<p>理想情况下，直接在Linux计算机上安装Docker，这样就不必处理在<strong>宿主操作系统内运行</strong>的<strong>虚拟机</strong>中<strong>运行容器</strong>的额外复杂性。但是，如果使用的是macOS或Windows，并且不知道如何设置Linux虚拟机，那么Docker Desktop应用程序可以完成设置。运行容器的Docker命令行（CLI）工具将安装在宿主操作系统上，但Docker守护进程（daemon）将在虚拟机内运行，它所创建的所有容器也将如此。</p>\n<p>Docker平台由许多组件组成，但只需要安装Docker Engine即可运行容器。如果使用的是macOS或Windows，需要先安装Docker Desktop。Docker文档地址：<a href=\"https://docs.docker.com/get-docker/\">https://docs.docker.com/get-docker/</a>。</p>\n<h2 id=\"运行一个hello-world容器\"><a href=\"#运行一个hello-world容器\" class=\"headerlink\" title=\"运行一个hello-world容器\"></a>运行一个hello-world容器</h2><p>为了回显’hello-world’，需要先从Docker Hub中拉取一个叫<code>busybox</code>的镜像。<code>busybox</code>是一个可执行文件，它结合了许多标准的UNIX命令行工具，如echo、ls、gzip。当然，还有其他的镜像可以做到执行回显命令。</p>\n<p>可以使用单个<code>docker run</code>命令完成下载指定的映像和在其中运行的命令。要运行简单的Hello world容器，请执行以下列表中显示的命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run busybox <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Hello World&quot;</span></span><br><span class=\"line\">Unable to find image <span class=\"string\">&#x27;busybox:latest&#x27;</span> locally</span><br><span class=\"line\">latest: Pulling from library/busybox</span><br><span class=\"line\">213a27df5921: Pull complete</span><br><span class=\"line\">Digest: sha256:9ae97d36d26566ff84e8893c64a6dc4fe8ca6d1144bf5b87b2b85a32def253c7</span><br><span class=\"line\">Status: Downloaded newer image <span class=\"keyword\">for</span> busybox:latest</span><br><span class=\"line\">Hello World</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"当运行容器的时候发生了什么？\"><a href=\"#当运行容器的时候发生了什么？\" class=\"headerlink\" title=\"当运行容器的时候发生了什么？\"></a>当运行容器的时候发生了什么？</h2><p>下图展示了当运行<code>docker run</code>命令的时候发生了什么<br><img src=\"/../../assets/image/k8s-in-action/17.png\" alt=\"17\"><br>将镜像下载到您的计算机后，Docker 守护进程根据该镜像创建了一个容器，并在其中执行了 echo 命令。该命令将文本打印到标准输出，然后进程终止，容器停止。</p>\n<h2 id=\"运行其他的镜像\"><a href=\"#运行其他的镜像\" class=\"headerlink\" title=\"运行其他的镜像\"></a>运行其他的镜像</h2><p>运行其他现有的容器镜像与运行busybox镜像非常相似。实际上，它通常甚至更简单，因为通常不需要像在前面的示例中的echo命令那样指定要执行的命令。要执行的命令通常写在镜像本身中，但可以在运行时覆盖它。</p>\n<p>例如，如果想运行Redis数据存储，可以在<a href=\"http://hub.docker.com/\">http://hub.docker.com</a>或其他公共注册中心找到镜像名称。对于Redis来说，其中一个镜像被称为redis:alpine，所以可以像这样运行它：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run redis:alpine</span><br></pre></td></tr></table></figure>\n\n\n\n\n<br>\n<br>\n","excerpt":"","more":"<p>理想情况下，直接在Linux计算机上安装Docker，这样就不必处理在<strong>宿主操作系统内运行</strong>的<strong>虚拟机</strong>中<strong>运行容器</strong>的额外复杂性。但是，如果使用的是macOS或Windows，并且不知道如何设置Linux虚拟机，那么Docker Desktop应用程序可以完成设置。运行容器的Docker命令行（CLI）工具将安装在宿主操作系统上，但Docker守护进程（daemon）将在虚拟机内运行，它所创建的所有容器也将如此。</p>\n<p>Docker平台由许多组件组成，但只需要安装Docker Engine即可运行容器。如果使用的是macOS或Windows，需要先安装Docker Desktop。Docker文档地址：<a href=\"https://docs.docker.com/get-docker/\">https://docs.docker.com/get-docker/</a>。</p>\n<h2 id=\"运行一个hello-world容器\"><a href=\"#运行一个hello-world容器\" class=\"headerlink\" title=\"运行一个hello-world容器\"></a>运行一个hello-world容器</h2><p>为了回显’hello-world’，需要先从Docker Hub中拉取一个叫<code>busybox</code>的镜像。<code>busybox</code>是一个可执行文件，它结合了许多标准的UNIX命令行工具，如echo、ls、gzip。当然，还有其他的镜像可以做到执行回显命令。</p>\n<p>可以使用单个<code>docker run</code>命令完成下载指定的映像和在其中运行的命令。要运行简单的Hello world容器，请执行以下列表中显示的命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run busybox <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Hello World&quot;</span></span><br><span class=\"line\">Unable to find image <span class=\"string\">&#x27;busybox:latest&#x27;</span> locally</span><br><span class=\"line\">latest: Pulling from library/busybox</span><br><span class=\"line\">213a27df5921: Pull complete</span><br><span class=\"line\">Digest: sha256:9ae97d36d26566ff84e8893c64a6dc4fe8ca6d1144bf5b87b2b85a32def253c7</span><br><span class=\"line\">Status: Downloaded newer image <span class=\"keyword\">for</span> busybox:latest</span><br><span class=\"line\">Hello World</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"当运行容器的时候发生了什么？\"><a href=\"#当运行容器的时候发生了什么？\" class=\"headerlink\" title=\"当运行容器的时候发生了什么？\"></a>当运行容器的时候发生了什么？</h2><p>下图展示了当运行<code>docker run</code>命令的时候发生了什么<br><img src=\"/../../assets/image/k8s-in-action/17.png\" alt=\"17\"><br>将镜像下载到您的计算机后，Docker 守护进程根据该镜像创建了一个容器，并在其中执行了 echo 命令。该命令将文本打印到标准输出，然后进程终止，容器停止。</p>\n<h2 id=\"运行其他的镜像\"><a href=\"#运行其他的镜像\" class=\"headerlink\" title=\"运行其他的镜像\"></a>运行其他的镜像</h2><p>运行其他现有的容器镜像与运行busybox镜像非常相似。实际上，它通常甚至更简单，因为通常不需要像在前面的示例中的echo命令那样指定要执行的命令。要执行的命令通常写在镜像本身中，但可以在运行时覆盖它。</p>\n<p>例如，如果想运行Redis数据存储，可以在<a href=\"http://hub.docker.com/\">http://hub.docker.com</a>或其他公共注册中心找到镜像名称。对于Redis来说，其中一个镜像被称为redis:alpine，所以可以像这样运行它：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run redis:alpine</span><br></pre></td></tr></table></figure>\n\n\n\n\n<br>\n<br>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clzfffbud0001d8s60unoctro","category_id":"clzfffbug0004d8s6apqw8rqn","_id":"clzfffbuh0008d8s625u4gyqh"},{"post_id":"clzfffbuf0003d8s662jpcdsg","category_id":"clzfffbug0004d8s6apqw8rqn","_id":"clzfffbuh000bd8s66hjp72kl"},{"post_id":"clzfg0bnt00005hs61sjdcvb4","category_id":"clzfffbug0004d8s6apqw8rqn","_id":"clzfg0bnz00035hs6evqz5qog"}],"PostTag":[{"post_id":"clzfffbud0001d8s60unoctro","tag_id":"clzfffbug0005d8s638sm9nud","_id":"clzfffbuh000ad8s63a7cbkyw"},{"post_id":"clzfffbud0001d8s60unoctro","tag_id":"clzfffbuh0007d8s6bc44fa6a","_id":"clzfffbuh000cd8s65hxjadjv"},{"post_id":"clzfffbuf0003d8s662jpcdsg","tag_id":"clzfffbuh0007d8s6bc44fa6a","_id":"clzfffbuh000dd8s68uyta0qq"},{"post_id":"clzfg0bnt00005hs61sjdcvb4","tag_id":"clzfffbug0005d8s638sm9nud","_id":"clzfg0bnz00015hs657ydfbiu"},{"post_id":"clzfg0bnt00005hs61sjdcvb4","tag_id":"clzfffbuh0007d8s6bc44fa6a","_id":"clzfg0bnz00025hs68che9nz9"}],"Tag":[{"name":"容器","_id":"clzfffbug0005d8s638sm9nud"},{"name":"k8s","_id":"clzfffbuh0007d8s6bc44fa6a"}]}}